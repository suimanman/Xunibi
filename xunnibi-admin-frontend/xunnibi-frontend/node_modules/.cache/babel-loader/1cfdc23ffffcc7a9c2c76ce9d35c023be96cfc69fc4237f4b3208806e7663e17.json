{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      // 1. 队伍虚拟币数量的假数据\n      teamsData: [{\n        name: '队伍A',\n        value: 200\n      }, {\n        name: '队伍B',\n        value: 150\n      }, {\n        name: '队伍C',\n        value: 300\n      }, {\n        name: '队伍D',\n        value: 50\n      }],\n      // 2. 消费虚拟币的物品假数据\n      itemsData: [{\n        name: 'Laser Cutter',\n        value: 80\n      }, {\n        name: 'Event Space',\n        value: 120\n      }, {\n        name: '3D Printer',\n        value: 60\n      }, {\n        name: 'Workshop',\n        value: 40\n      }],\n      // 3. 竞赛或论文获得的虚拟币的假数据\n      competitionsData: [{\n        name: '竞赛A',\n        value: 150\n      }, {\n        name: '论文B',\n        value: 180\n      }, {\n        name: '竞赛C',\n        value: 100\n      }, {\n        name: '论文D',\n        value: 130\n      }]\n    };\n  },\n  mounted() {\n    this.initCharts();\n  },\n  methods: {\n    initCharts() {\n      // 1. 队伍虚拟币数量柱状图\n      this.renderBarChart();\n\n      // 2. 消费虚拟币的物品饼状图\n      this.renderPieChart();\n\n      // 3. 获得虚拟币的竞赛/论文柱状图\n      this.renderCompetitionChart();\n    },\n    renderBarChart() {\n      const chart = echarts.init(this.$refs.barChart);\n      const option = {\n        title: {\n          text: '每个队伍的虚拟币数量',\n          subtext: '假数据展示',\n          left: 'center',\n          textStyle: {\n            fontWeight: 'bold',\n            fontSize: 20,\n            color: '#333'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: this.teamsData.map(item => item.name),\n          axisLine: {\n            lineStyle: {\n              color: '#ccc'\n            }\n          },\n          axisLabel: {\n            fontSize: 14,\n            color: '#666'\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#ccc'\n            }\n          },\n          axisLabel: {\n            fontSize: 14,\n            color: '#666'\n          }\n        },\n        series: [{\n          data: this.teamsData.map(item => item.value),\n          type: 'bar',\n          color: '#4caf50',\n          barWidth: '50%'\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderPieChart() {\n      const chart = echarts.init(this.$refs.pieChart);\n      const option = {\n        backgroundColor: '#2c343c',\n        title: {\n          text: '物品消费虚拟币情况',\n          left: 'center',\n          top: 20,\n          textStyle: {\n            color: '#ccc'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)',\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        visualMap: {\n          show: false,\n          min: 80,\n          max: 600,\n          inRange: {\n            colorLightness: [0, 1]\n          }\n        },\n        series: [{\n          name: '消费物品',\n          type: 'pie',\n          radius: '55%',\n          center: ['50%', '50%'],\n          data: this.itemsData.map(item => ({\n            value: item.value,\n            name: item.name\n          })).sort(function (a, b) {\n            return a.value - b.value;\n          }),\n          roseType: 'radius',\n          label: {\n            color: 'rgba(255, 255, 255, 0.3)'\n          },\n          labelLine: {\n            lineStyle: {\n              color: 'rgba(255, 255, 255, 0.3)'\n            },\n            smooth: 0.2,\n            length: 10,\n            length2: 20\n          },\n          itemStyle: {\n            color: '#c23531',\n            shadowBlur: 200,\n            shadowColor: 'rgba(0.8, 0.8, 0.5, 0.5)'\n          },\n          animationType: 'scale',\n          animationEasing: 'elasticOut',\n          animationDelay: function (idx) {\n            return Math.random() * 200;\n          }\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderCompetitionChart() {\n      const chart = echarts.init(this.$refs.competitionChart);\n      const option = {\n        title: {\n          text: '竞赛/论文获得虚拟币情况',\n          subtext: '假数据展示',\n          left: 'center',\n          textStyle: {\n            fontWeight: 'bold',\n            fontSize: 20,\n            color: '#333'\n          }\n        },\n        tooltip: {\n          trigger: 'item',\n          backgroundColor: 'rgba(0,0,0,0.7)',\n          textStyle: {\n            color: '#fff'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: this.competitionsData.map(item => item.name),\n          axisLine: {\n            lineStyle: {\n              color: '#ccc'\n            }\n          },\n          axisLabel: {\n            fontSize: 14,\n            color: '#666'\n          }\n        },\n        yAxis: {\n          type: 'value',\n          axisLine: {\n            lineStyle: {\n              color: '#ccc'\n            }\n          },\n          axisLabel: {\n            fontSize: 14,\n            color: '#666'\n          }\n        },\n        series: [{\n          data: this.competitionsData.map(item => item.value),\n          type: 'bar',\n          color: '#ff9800',\n          barWidth: '50%'\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","teamsData","name","value","itemsData","competitionsData","mounted","initCharts","methods","renderBarChart","renderPieChart","renderCompetitionChart","chart","init","$refs","barChart","option","title","text","subtext","left","textStyle","fontWeight","fontSize","color","tooltip","trigger","backgroundColor","xAxis","type","map","item","axisLine","lineStyle","axisLabel","yAxis","series","barWidth","setOption","pieChart","top","formatter","visualMap","show","min","max","inRange","colorLightness","radius","center","sort","a","b","roseType","label","labelLine","smooth","length","length2","itemStyle","shadowBlur","shadowColor","animationType","animationEasing","animationDelay","idx","Math","random","competitionChart"],"sources":["src/views/manage/XunibiView.vue"],"sourcesContent":["<template>\n    <div class=\"charts-container\">\n        <!-- 队伍虚拟币数量柱状图 -->\n        <div class=\"chart-box\">\n            <div ref=\"barChart\" class=\"chart\" style=\"height: 400px;\"></div>\n            <h2 class=\"chart-title\">每个队伍的虚拟币数量</h2>\n        </div>\n\n        <!-- 消费虚拟币的物品饼状图 -->\n        <div class=\"chart-box\">\n            <div ref=\"pieChart\" class=\"chart\" style=\"height: 400px; margin-top: 30px;\"></div>\n            <h2 class=\"chart-title\">物品消费虚拟币情况</h2>\n        </div>\n\n        <!-- 获得虚拟币的竞赛/论文柱状图 -->\n        <div class=\"chart-box\">\n            <div ref=\"competitionChart\" class=\"chart\" style=\"height: 400px; margin-top: 30px;\"></div>\n            <h2 class=\"chart-title\">竞赛/论文获得虚拟币情况</h2>\n        </div>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    data() {\n        return {\n            // 1. 队伍虚拟币数量的假数据\n            teamsData: [\n                { name: '队伍A', value: 200 },\n                { name: '队伍B', value: 150 },\n                { name: '队伍C', value: 300 },\n                { name: '队伍D', value: 50 }\n            ],\n            // 2. 消费虚拟币的物品假数据\n            itemsData: [\n                { name: 'Laser Cutter', value: 80 },\n                { name: 'Event Space', value: 120 },\n                { name: '3D Printer', value: 60 },\n                { name: 'Workshop', value: 40 }\n            ],\n            // 3. 竞赛或论文获得的虚拟币的假数据\n            competitionsData: [\n                { name: '竞赛A', value: 150 },\n                { name: '论文B', value: 180 },\n                { name: '竞赛C', value: 100 },\n                { name: '论文D', value: 130 }\n            ]\n        };\n    },\n    mounted() {\n        this.initCharts();\n    },\n    methods: {\n        initCharts() {\n            // 1. 队伍虚拟币数量柱状图\n            this.renderBarChart();\n\n            // 2. 消费虚拟币的物品饼状图\n            this.renderPieChart();\n\n            // 3. 获得虚拟币的竞赛/论文柱状图\n            this.renderCompetitionChart();\n        },\n\n        renderBarChart() {\n            const chart = echarts.init(this.$refs.barChart);\n            const option = {\n                title: {\n                    text: '每个队伍的虚拟币数量',\n                    subtext: '假数据展示',\n                    left: 'center',\n                    textStyle: {\n                        fontWeight: 'bold',\n                        fontSize: 20,\n                        color: '#333'\n                    }\n                },\n                tooltip: {\n                    trigger: 'item',\n                    backgroundColor: 'rgba(0,0,0,0.7)',\n                    textStyle: {\n                        color: '#fff'\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    data: this.teamsData.map(item => item.name),\n                    axisLine: {\n                        lineStyle: {\n                            color: '#ccc'\n                        }\n                    },\n                    axisLabel: {\n                        fontSize: 14,\n                        color: '#666'\n                    }\n                },\n                yAxis: {\n                    type: 'value',\n                    axisLine: {\n                        lineStyle: {\n                            color: '#ccc'\n                        }\n                    },\n                    axisLabel: {\n                        fontSize: 14,\n                        color: '#666'\n                    }\n                },\n                series: [\n                    {\n                        data: this.teamsData.map(item => item.value),\n                        type: 'bar',\n                        color: '#4caf50',\n                        barWidth: '50%'\n                    }\n                ]\n            };\n            chart.setOption(option);\n        },\n\n        renderPieChart() {\n            const chart = echarts.init(this.$refs.pieChart);\n            const option = {\n                backgroundColor: '#2c343c',\n                title: {\n                    text: '物品消费虚拟币情况',\n                    left: 'center',\n                    top: 20,\n                    textStyle: {\n                        color: '#ccc'\n                    }\n                },\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{a} <br/>{b}: {c} ({d}%)',\n                    backgroundColor: 'rgba(0,0,0,0.7)',\n                    textStyle: {\n                        color: '#fff'\n                    }\n                },\n                visualMap: {\n                    show: false,\n                    min: 80,\n                    max: 600,\n                    inRange: {\n                        colorLightness: [0, 1]\n                    }\n                },\n                series: [\n                    {\n                        name: '消费物品',\n                        type: 'pie',\n                        radius: '55%',\n                        center: ['50%', '50%'],\n                        data: this.itemsData.map(item => ({\n                            value: item.value,\n                            name: item.name\n                        })).sort(function (a, b) {\n                            return a.value - b.value;\n                        }),\n                        roseType: 'radius',\n                        label: {\n                            color: 'rgba(255, 255, 255, 0.3)'\n                        },\n                        labelLine: {\n                            lineStyle: {\n                                color: 'rgba(255, 255, 255, 0.3)'\n                            },\n                            smooth: 0.2,\n                            length: 10,\n                            length2: 20\n                        },\n                        itemStyle: {\n                            color: '#c23531',\n                            shadowBlur: 200,\n                            shadowColor: 'rgba(0.8, 0.8, 0.5, 0.5)'\n                        },\n                        animationType: 'scale',\n                        animationEasing: 'elasticOut',\n                        animationDelay: function (idx) {\n                            return Math.random() * 200;\n                        }\n                    }\n                ]\n            };\n            chart.setOption(option);\n        },\n\n\n        renderCompetitionChart() {\n            const chart = echarts.init(this.$refs.competitionChart);\n            const option = {\n                title: {\n                    text: '竞赛/论文获得虚拟币情况',\n                    subtext: '假数据展示',\n                    left: 'center',\n                    textStyle: {\n                        fontWeight: 'bold',\n                        fontSize: 20,\n                        color: '#333'\n                    }\n                },\n                tooltip: {\n                    trigger: 'item',\n                    backgroundColor: 'rgba(0,0,0,0.7)',\n                    textStyle: {\n                        color: '#fff'\n                    }\n                },\n                xAxis: {\n                    type: 'category',\n                    data: this.competitionsData.map(item => item.name),\n                    axisLine: {\n                        lineStyle: {\n                            color: '#ccc'\n                        }\n                    },\n                    axisLabel: {\n                        fontSize: 14,\n                        color: '#666'\n                    }\n                },\n                yAxis: {\n                    type: 'value',\n                    axisLine: {\n                        lineStyle: {\n                            color: '#ccc'\n                        }\n                    },\n                    axisLabel: {\n                        fontSize: 14,\n                        color: '#666'\n                    }\n                },\n                series: [\n                    {\n                        data: this.competitionsData.map(item => item.value),\n                        type: 'bar',\n                        color: '#ff9800',\n                        barWidth: '50%'\n                    }\n                ]\n            };\n            chart.setOption(option);\n        }\n    }\n};\n</script>\n\n<style scoped>\n.charts-container {\n    margin: 20px;\n    display: flex;\n    flex-direction: column;\n    gap: 40px;\n}\n\n.chart-box {\n    padding: 20px;\n    border-radius: 10px;\n    background-color: #fff;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    border: 1px solid #e0e0e0;\n}\n\n.chart-title {\n    font-size: 20px;\n    font-weight: bold;\n    color: #333;\n    text-align: center;\n    margin-top: 15px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}