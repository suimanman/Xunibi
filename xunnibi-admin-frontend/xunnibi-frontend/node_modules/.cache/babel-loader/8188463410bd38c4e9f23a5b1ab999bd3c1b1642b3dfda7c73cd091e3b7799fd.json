{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      teamList: [],\n      // 团队数据列表\n      searchQuery: null,\n      tableData: [],\n      // 假数据容器\n      dialogVisible: false,\n      // 控制弹窗显示\n      selectedRow: null,\n      // 当前操作的行数据\n      coinAmount: 0 // 增加的虚拟币数量\n    };\n  },\n  created() {},\n  mounted() {\n    this.getAchievementList();\n  },\n  methods: {\n    // 查询功能\n    search() {\n      // 检查输入是否合法\n      if (!this.searchQuery) {\n        this.$message.warning(\"请输入团队名称查询\");\n        return;\n      }\n\n      // 根据团队名称过滤表格数据\n      this.tableData = this.tableData.filter(item => item.teamName.toLowerCase().includes(this.searchQuery.toLowerCase()));\n    },\n    // 重置查询\n    reset() {\n      this.searchQuery = null;\n      this.getAchievementList();\n    },\n    // 获取待审核列表\n    async getAchievementList() {\n      try {\n        const [achievementListResponse, teamListResponse] = await Promise.all([axios.get(\"http://localhost:8080/records/achieveRecords\"), axios.get(\"http://localhost:8080/team/list\")]);\n        if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n          this.tableData = achievementListResponse.data.data.map(item => {\n            const team = teamListResponse.data.find(t => t.teamId === item.teamId);\n            return {\n              ...item,\n              material: item.description,\n              teamName: team ? team.teamName : \"未知\"\n            };\n          });\n        }\n      } catch (error) {\n        console.error(\"获取待审核列表失败:\", error);\n        this.$message.error(\"获取待审核列表失败，请稍后重试\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","teamList","searchQuery","tableData","dialogVisible","selectedRow","coinAmount","created","mounted","getAchievementList","methods","search","$message","warning","filter","item","teamName","toLowerCase","includes","reset","achievementListResponse","teamListResponse","Promise","all","get","code","status","map","team","find","t","teamId","material","description","error","console"],"sources":["src/views/manage/ReviewRecordsView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"header\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入团队Id\" style=\"width: 250px\"></el-input>\n            <el-button type=\"info\" plain @click=\"search\">查询</el-button>\n            <el-button type=\"warning\" plain @click=\"reset\">重置</el-button>\n        </div>\n\n        <div class=\"table-wrapper\">\n            <el-table ref=\"filterTable\" :data=\"tableData\" style=\"width: 100%\" border>\n                <el-table-column prop=\"achievementId\" label=\"id\" align=\"center\" width=\"100px\">\n                </el-table-column>\n                <el-table-column prop=\"material\" label=\"审核材料\" align=\"left\">\n                </el-table-column>\n                <el-table-column prop=\"achievementType\" label=\"审核材料类型\" align=\"center\" width=\"150px\">\n                </el-table-column>\n                <el-table-column prop=\"teamId\" label=\"团队Id\" align=\"center\" width=\"100px\">\n                </el-table-column>\n                <el-table-column prop=\"teamName\" label=\"团队名称\" align=\"center\" width=\"100px\"></el-table-column>\n                <el-table-column prop=\"status\" label=\"审核状态\" align=\"center\" width=\"100px\">\n                </el-table-column>\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n    data() {\n        return {\n            teamList: [], // 团队数据列表\n            searchQuery: null,\n            tableData: [], // 假数据容器\n            dialogVisible: false, // 控制弹窗显示\n            selectedRow: null, // 当前操作的行数据\n            coinAmount: 0, // 增加的虚拟币数量\n        };\n    },\n    created() {\n    },\n    mounted() {\n        this.getAchievementList();\n    },\n    methods: {\n        // 查询功能\n        search() {\n            // 检查输入是否合法\n            if (!this.searchQuery) {\n                this.$message.warning(\"请输入团队名称查询\");\n                return;\n            }\n\n            // 根据团队名称过滤表格数据\n            this.tableData = this.tableData.filter(item =>\n                item.teamName.toLowerCase().includes(this.searchQuery.toLowerCase())\n            );\n        },\n\n        // 重置查询\n        reset() {\n            this.searchQuery = null;\n            this.getAchievementList();\n        },\n\n        // 获取待审核列表\n        async getAchievementList() {\n            try {\n                const [achievementListResponse, teamListResponse] = await Promise.all([\n                    axios.get(\"http://localhost:8080/records/achieveRecords\"),\n                    axios.get(\"http://localhost:8080/team/list\"),\n                ]);\n                if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n                    this.tableData = achievementListResponse.data.data.map((item) => {\n                        const team = teamListResponse.data.find((t) => t.teamId === item.teamId);\n                        return {\n                            ...item,\n                            material: item.description,\n                            teamName: team ? team.teamName : \"未知\",\n                        }\n                    })\n                }\n            } catch (error) {\n                console.error(\"获取待审核列表失败:\", error);\n                this.$message.error(\"获取待审核列表失败，请稍后重试\");\n            }\n        },\n\n    },\n};\n</script>\n\n<style scoped>\n.container {\n    padding: 20px;\n    background-color: #f9f9f9;\n}\n\n.header {\n    display: flex;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.header .el-input {\n    max-width: 300px;\n}\n\n.table-wrapper {\n    border: 1px solid #e0e0e0;\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    padding: 10px;\n}\n</style>\n"],"mappings":"AA2BA,OAAAA,KAAA;AACA;EACAC,KAAA;IACA;MACAC,QAAA;MAAA;MACAC,WAAA;MACAC,SAAA;MAAA;MACAC,aAAA;MAAA;MACAC,WAAA;MAAA;MACAC,UAAA;IACA;EACA;EACAC,QAAA,GACA;EACAC,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA;MACA,UAAAT,WAAA;QACA,KAAAU,QAAA,CAAAC,OAAA;QACA;MACA;;MAEA;MACA,KAAAV,SAAA,QAAAA,SAAA,CAAAW,MAAA,CAAAC,IAAA,IACAA,IAAA,CAAAC,QAAA,CAAAC,WAAA,GAAAC,QAAA,MAAAhB,WAAA,CAAAe,WAAA,GACA;IACA;IAEA;IACAE,MAAA;MACA,KAAAjB,WAAA;MACA,KAAAO,kBAAA;IACA;IAEA;IACA,MAAAA,mBAAA;MACA;QACA,OAAAW,uBAAA,EAAAC,gBAAA,UAAAC,OAAA,CAAAC,GAAA,EACAxB,KAAA,CAAAyB,GAAA,kDACAzB,KAAA,CAAAyB,GAAA,oCACA;QACA,IAAAJ,uBAAA,CAAApB,IAAA,CAAAyB,IAAA,YAAAJ,gBAAA,CAAAK,MAAA;UACA,KAAAvB,SAAA,GAAAiB,uBAAA,CAAApB,IAAA,CAAAA,IAAA,CAAA2B,GAAA,CAAAZ,IAAA;YACA,MAAAa,IAAA,GAAAP,gBAAA,CAAArB,IAAA,CAAA6B,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,MAAA,KAAAhB,IAAA,CAAAgB,MAAA;YACA;cACA,GAAAhB,IAAA;cACAiB,QAAA,EAAAjB,IAAA,CAAAkB,WAAA;cACAjB,QAAA,EAAAY,IAAA,GAAAA,IAAA,CAAAZ,QAAA;YACA;UACA;QACA;MACA,SAAAkB,KAAA;QACAC,OAAA,CAAAD,KAAA,eAAAA,KAAA;QACA,KAAAtB,QAAA,CAAAsB,KAAA;MACA;IACA;EAEA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}