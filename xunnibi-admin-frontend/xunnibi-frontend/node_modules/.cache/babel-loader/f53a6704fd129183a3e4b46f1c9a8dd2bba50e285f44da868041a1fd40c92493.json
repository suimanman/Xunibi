{"ast":null,"code":"import * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      // 1. 队伍虚拟币数量的假数据\n      teamsData: [{\n        name: '队伍A',\n        value: 200\n      }, {\n        name: '队伍B',\n        value: 150\n      }, {\n        name: '队伍C',\n        value: 300\n      }, {\n        name: '队伍D',\n        value: 50\n      }],\n      // 2. 消费虚拟币的物品假数据\n      itemsData: [{\n        name: 'Laser Cutter',\n        value: 80\n      }, {\n        name: 'Event Space',\n        value: 120\n      }, {\n        name: '3D Printer',\n        value: 60\n      }, {\n        name: 'Workshop',\n        value: 40\n      }],\n      // 3. 竞赛或论文获得的虚拟币的假数据\n      competitionsData: [{\n        name: '竞赛A',\n        value: 150\n      }, {\n        name: '论文B',\n        value: 180\n      }, {\n        name: '竞赛C',\n        value: 100\n      }, {\n        name: '论文D',\n        value: 130\n      }]\n    };\n  },\n  mounted() {\n    this.initCharts();\n  },\n  methods: {\n    initCharts() {\n      // 1. 队伍虚拟币数量柱状图\n      this.renderBarChart();\n\n      // 2. 消费虚拟币的物品饼状图\n      this.renderPieChart();\n\n      // 3. 获得虚拟币的竞赛/论文柱状图\n      this.renderCompetitionChart();\n    },\n    renderBarChart() {\n      const chart = echarts.init(this.$refs.barChart);\n      const option = {\n        title: {\n          text: '每个队伍的虚拟币数量',\n          subtext: '假数据展示',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.teamsData.map(item => item.name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.teamsData.map(item => item.value),\n          type: 'bar',\n          color: '#4caf50'\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderPieChart() {\n      const chart = echarts.init(this.$refs.pieChart);\n      const option = {\n        title: {\n          text: '物品消费虚拟币情况',\n          subtext: '假数据展示',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item',\n          formatter: '{a} <br/>{b}: {c} ({d}%)'\n        },\n        series: [{\n          name: '消费物品',\n          type: 'pie',\n          radius: '50%',\n          data: this.itemsData.map(item => ({\n            name: item.name,\n            value: item.value\n          }))\n        }]\n      };\n      chart.setOption(option);\n    },\n    renderCompetitionChart() {\n      const chart = echarts.init(this.$refs.competitionChart);\n      const option = {\n        title: {\n          text: '竞赛/论文获得虚拟币情况',\n          subtext: '假数据展示',\n          left: 'center'\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.competitionsData.map(item => item.name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.competitionsData.map(item => item.value),\n          type: 'bar',\n          color: '#ff9800'\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","teamsData","name","value","itemsData","competitionsData","mounted","initCharts","methods","renderBarChart","renderPieChart","renderCompetitionChart","chart","init","$refs","barChart","option","title","text","subtext","left","tooltip","trigger","xAxis","type","map","item","yAxis","series","color","setOption","pieChart","formatter","radius","competitionChart"],"sources":["src/views/manage/XunibiView.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- 队伍虚拟币数量柱状图 -->\n        <div ref=\"barChart\" style=\"height: 400px; width: 100%;\"></div>\n\n        <!-- 消费虚拟币饼状图 -->\n        <div ref=\"pieChart\" style=\"height: 400px; width: 100%; margin-top: 30px;\"></div>\n\n        <!-- 获得虚拟币的竞赛/论文柱状图 -->\n        <div ref=\"competitionChart\" style=\"height: 400px; width: 100%; margin-top: 30px;\"></div>\n    </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n    data() {\n        return {\n            // 1. 队伍虚拟币数量的假数据\n            teamsData: [\n                { name: '队伍A', value: 200 },\n                { name: '队伍B', value: 150 },\n                { name: '队伍C', value: 300 },\n                { name: '队伍D', value: 50 }\n            ],\n            // 2. 消费虚拟币的物品假数据\n            itemsData: [\n                { name: 'Laser Cutter', value: 80 },\n                { name: 'Event Space', value: 120 },\n                { name: '3D Printer', value: 60 },\n                { name: 'Workshop', value: 40 }\n            ],\n            // 3. 竞赛或论文获得的虚拟币的假数据\n            competitionsData: [\n                { name: '竞赛A', value: 150 },\n                { name: '论文B', value: 180 },\n                { name: '竞赛C', value: 100 },\n                { name: '论文D', value: 130 }\n            ]\n        };\n    },\n    mounted() {\n        this.initCharts();\n    },\n    methods: {\n        initCharts() {\n            // 1. 队伍虚拟币数量柱状图\n            this.renderBarChart();\n\n            // 2. 消费虚拟币的物品饼状图\n            this.renderPieChart();\n\n            // 3. 获得虚拟币的竞赛/论文柱状图\n            this.renderCompetitionChart();\n        },\n\n        renderBarChart() {\n            const chart = echarts.init(this.$refs.barChart);\n            const option = {\n                title: {\n                    text: '每个队伍的虚拟币数量',\n                    subtext: '假数据展示',\n                    left: 'center'\n                },\n                tooltip: {\n                    trigger: 'item'\n                },\n                xAxis: {\n                    type: 'category',\n                    data: this.teamsData.map(item => item.name)\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        data: this.teamsData.map(item => item.value),\n                        type: 'bar',\n                        color: '#4caf50'\n                    }\n                ]\n            };\n            chart.setOption(option);\n        },\n\n        renderPieChart() {\n            const chart = echarts.init(this.$refs.pieChart);\n            const option = {\n                title: {\n                    text: '物品消费虚拟币情况',\n                    subtext: '假数据展示',\n                    left: 'center'\n                },\n                tooltip: {\n                    trigger: 'item',\n                    formatter: '{a} <br/>{b}: {c} ({d}%)'\n                },\n                series: [\n                    {\n                        name: '消费物品',\n                        type: 'pie',\n                        radius: '50%',\n                        data: this.itemsData.map(item => ({\n                            name: item.name,\n                            value: item.value\n                        }))\n                    }\n                ]\n            };\n            chart.setOption(option);\n        },\n\n        renderCompetitionChart() {\n            const chart = echarts.init(this.$refs.competitionChart);\n            const option = {\n                title: {\n                    text: '竞赛/论文获得虚拟币情况',\n                    subtext: '假数据展示',\n                    left: 'center'\n                },\n                tooltip: {\n                    trigger: 'item'\n                },\n                xAxis: {\n                    type: 'category',\n                    data: this.competitionsData.map(item => item.name)\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series: [\n                    {\n                        data: this.competitionsData.map(item => item.value),\n                        type: 'bar',\n                        color: '#ff9800'\n                    }\n                ]\n            };\n            chart.setOption(option);\n        }\n    }\n};\n</script>\n\n<style scoped>\n/* 这里可以添加样式来调整图表的布局 */\n</style>"],"mappings":"AAcA,YAAAA,OAAA;AAEA;EACAC,KAAA;IACA;MACA;MACAC,SAAA,GACA;QAAAC,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACA;MACAC,SAAA,GACA;QAAAF,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,EACA;MACA;MACAE,gBAAA,GACA;QAAAH,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,IAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAG,QAAA;IACA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAA;MACA;MACA,KAAAE,cAAA;;MAEA;MACA,KAAAC,cAAA;;MAEA;MACA,KAAAC,sBAAA;IACA;IAEAF,eAAA;MACA,MAAAG,KAAA,GAAAb,OAAA,CAAAc,IAAA,MAAAC,KAAA,CAAAC,QAAA;MACA,MAAAC,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAxB,IAAA,OAAAC,SAAA,CAAAwB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAxB,IAAA;QACA;QACAyB,KAAA;UACAH,IAAA;QACA;QACAI,MAAA,GACA;UACA5B,IAAA,OAAAC,SAAA,CAAAwB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAvB,KAAA;UACAqB,IAAA;UACAK,KAAA;QACA;MAEA;MACAjB,KAAA,CAAAkB,SAAA,CAAAd,MAAA;IACA;IAEAN,eAAA;MACA,MAAAE,KAAA,GAAAb,OAAA,CAAAc,IAAA,MAAAC,KAAA,CAAAiB,QAAA;MACA,MAAAf,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;UACAU,SAAA;QACA;QACAJ,MAAA,GACA;UACA1B,IAAA;UACAsB,IAAA;UACAS,MAAA;UACAjC,IAAA,OAAAI,SAAA,CAAAqB,GAAA,CAAAC,IAAA;YACAxB,IAAA,EAAAwB,IAAA,CAAAxB,IAAA;YACAC,KAAA,EAAAuB,IAAA,CAAAvB;UACA;QACA;MAEA;MACAS,KAAA,CAAAkB,SAAA,CAAAd,MAAA;IACA;IAEAL,uBAAA;MACA,MAAAC,KAAA,GAAAb,OAAA,CAAAc,IAAA,MAAAC,KAAA,CAAAoB,gBAAA;MACA,MAAAlB,MAAA;QACAC,KAAA;UACAC,IAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACAC,OAAA;UACAC,OAAA;QACA;QACAC,KAAA;UACAC,IAAA;UACAxB,IAAA,OAAAK,gBAAA,CAAAoB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAxB,IAAA;QACA;QACAyB,KAAA;UACAH,IAAA;QACA;QACAI,MAAA,GACA;UACA5B,IAAA,OAAAK,gBAAA,CAAAoB,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAvB,KAAA;UACAqB,IAAA;UACAK,KAAA;QACA;MAEA;MACAjB,KAAA,CAAAkB,SAAA,CAAAd,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}