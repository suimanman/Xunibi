{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      // 搜索框内容\n      noticeData: [] // 公告数据\n    };\n  },\n  methods: {\n    // 查询公告\n    search() {\n      if (!this.searchQuery) {\n        ElMessage.warning(\"请输入搜索内容！\");\n        return;\n      }\n      // 这里调用接口查询数据\n      console.log(\"Searching for:\", this.searchQuery);\n      // 示例：通过searchQuery过滤数据（假设后端已支持模糊查询）\n      this.fetchData({\n        search: this.searchQuery\n      });\n    },\n    // 重置查询\n    reset() {\n      this.searchQuery = \"\";\n      this.fetchData(); // 重新加载数据\n    },\n    // 新增公告\n    handleAdd() {\n      console.log(\"Navigate to Add Page\");\n      this.$router.push({\n        path: \"/add-notice\"\n      });\n    },\n    // 编辑公告\n    handleEdit(row) {\n      console.log(\"Edit row:\", row);\n      this.$router.push({\n        path: `/edit-notice/${row.id}`\n      });\n    },\n    // 删除公告\n    del(id) {\n      console.log(\"Delete ID:\", id);\n      // 确认删除操作\n      this.$confirm(\"确认删除此公告吗？\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => {\n        // 调用后端接口删除数据\n        this.$http.delete(`/api/notices/${id}`).then(() => {\n          ElMessage.success(\"删除成功！\");\n          this.fetchData(); // 刷新数据\n        });\n      }).catch(() => {\n        ElMessage.info(\"取消删除\");\n      });\n    },\n    // 格式化显示字段\n    formatDisplay(row, column, cellValue) {\n      return cellValue === 1 ? \"是\" : \"否\";\n    },\n    // 获取公告数据\n    fetchData(params = {}) {\n      this.$http.get(\"/api/notices\", {\n        params\n      }).then(response => {\n        this.noticeData = response.data || [];\n      }).catch(error => {\n        console.error(\"Failed to fetch data:\", error);\n      });\n    }\n  },\n  mounted() {\n    // 页面加载时获取数据\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["data","searchQuery","noticeData","methods","search","ElMessage","warning","console","log","fetchData","reset","handleAdd","$router","push","path","handleEdit","row","id","del","$confirm","confirmButtonText","cancelButtonText","type","then","$http","delete","success","catch","info","formatDisplay","column","cellValue","params","get","response","error","mounted"],"sources":["src/views/manage/NoticeView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"search\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入公告内容查询\" style=\"width: 200px\">\n            </el-input>\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"search\">\n                查询\n            </el-button>\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">\n                重置\n            </el-button>\n            <el-button type=\"primary\" plain @click=\"handleAdd\">\n                新增\n            </el-button>\n        </div>\n        <div class=\"table\">\n            <el-table :data=\"noticeData\" border>\n                <el-table-column prop=\"id\" label=\"Id\" sortable></el-table-column>\n                <el-table-column prop=\"content\" label=\"公告内容\"></el-table-column>\n                <el-table-column prop=\"createdAt\" label=\"公告时间\"></el-table-column>\n                <el-table-column prop=\"display\" label=\"是否显示\" :formatter=\"formatDisplay\">\n                </el-table-column>\n                <el-table-column label=\"操作\">\n                    <template #default=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">\n                            编辑\n                        </el-button>\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">\n                            删除\n                        </el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    data() {\n        return {\n            searchQuery: \"\", // 搜索框内容\n            noticeData: [], // 公告数据\n        };\n    },\n    methods: {\n        // 查询公告\n        search() {\n            if (!this.searchQuery) {\n                ElMessage.warning(\"请输入搜索内容！\");\n                return;\n            }\n            // 这里调用接口查询数据\n            console.log(\"Searching for:\", this.searchQuery);\n            // 示例：通过searchQuery过滤数据（假设后端已支持模糊查询）\n            this.fetchData({ search: this.searchQuery });\n        },\n        // 重置查询\n        reset() {\n            this.searchQuery = \"\";\n            this.fetchData(); // 重新加载数据\n        },\n        // 新增公告\n        handleAdd() {\n            console.log(\"Navigate to Add Page\");\n            this.$router.push({ path: \"/add-notice\" });\n        },\n        // 编辑公告\n        handleEdit(row) {\n            console.log(\"Edit row:\", row);\n            this.$router.push({ path: `/edit-notice/${row.id}` });\n        },\n        // 删除公告\n        del(id) {\n            console.log(\"Delete ID:\", id);\n            // 确认删除操作\n            this.$confirm(\"确认删除此公告吗？\", \"提示\", {\n                confirmButtonText: \"确定\",\n                cancelButtonText: \"取消\",\n                type: \"warning\",\n            })\n                .then(() => {\n                    // 调用后端接口删除数据\n                    this.$http.delete(`/api/notices/${id}`).then(() => {\n                        ElMessage.success(\"删除成功！\");\n                        this.fetchData(); // 刷新数据\n                    });\n                })\n                .catch(() => {\n                    ElMessage.info(\"取消删除\");\n                });\n        },\n        // 格式化显示字段\n        formatDisplay(row, column, cellValue) {\n            return cellValue === 1 ? \"是\" : \"否\";\n        },\n        // 获取公告数据\n        fetchData(params = {}) {\n            this.$http\n                .get(\"/api/notices\", { params })\n                .then((response) => {\n                    this.noticeData = response.data || [];\n                })\n                .catch((error) => {\n                    console.error(\"Failed to fetch data:\", error);\n                });\n        },\n    },\n    mounted() {\n        // 页面加载时获取数据\n        this.fetchData();\n    },\n};\n</script>\n\n<style scoped>\n.search {\n    margin-bottom: 20px;\n}\n\n.table {\n    margin-top: 10px;\n}\n</style>"],"mappings":";AAuCA;EACAA,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA;IACA;IACAC,OAAA;MACA,UAAAH,WAAA;QACAI,SAAA,CAAAC,OAAA;QACA;MACA;MACA;MACAC,OAAA,CAAAC,GAAA,wBAAAP,WAAA;MACA;MACA,KAAAQ,SAAA;QAAAL,MAAA,OAAAH;MAAA;IACA;IACA;IACAS,MAAA;MACA,KAAAT,WAAA;MACA,KAAAQ,SAAA;IACA;IACA;IACAE,UAAA;MACAJ,OAAA,CAAAC,GAAA;MACA,KAAAI,OAAA,CAAAC,IAAA;QAAAC,IAAA;MAAA;IACA;IACA;IACAC,WAAAC,GAAA;MACAT,OAAA,CAAAC,GAAA,cAAAQ,GAAA;MACA,KAAAJ,OAAA,CAAAC,IAAA;QAAAC,IAAA,kBAAAE,GAAA,CAAAC,EAAA;MAAA;IACA;IACA;IACAC,IAAAD,EAAA;MACAV,OAAA,CAAAC,GAAA,eAAAS,EAAA;MACA;MACA,KAAAE,QAAA;QACAC,iBAAA;QACAC,gBAAA;QACAC,IAAA;MACA,GACAC,IAAA;QACA;QACA,KAAAC,KAAA,CAAAC,MAAA,iBAAAR,EAAA,IAAAM,IAAA;UACAlB,SAAA,CAAAqB,OAAA;UACA,KAAAjB,SAAA;QACA;MACA,GACAkB,KAAA;QACAtB,SAAA,CAAAuB,IAAA;MACA;IACA;IACA;IACAC,cAAAb,GAAA,EAAAc,MAAA,EAAAC,SAAA;MACA,OAAAA,SAAA;IACA;IACA;IACAtB,UAAAuB,MAAA;MACA,KAAAR,KAAA,CACAS,GAAA;QAAAD;MAAA,GACAT,IAAA,CAAAW,QAAA;QACA,KAAAhC,UAAA,GAAAgC,QAAA,CAAAlC,IAAA;MACA,GACA2B,KAAA,CAAAQ,KAAA;QACA5B,OAAA,CAAA4B,KAAA,0BAAAA,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA;IACA,KAAA3B,SAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}