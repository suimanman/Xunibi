{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      // 搜索关键词\n      teams: [],\n      // 团队数据列表\n      selectedTeams: [] // 选中的团队数据\n    };\n  },\n  created() {\n    this.load(); // 页面加载时获取数据\n  },\n  methods: {\n    async load() {\n      try {\n        const response = await axios.get('http://localhost:8080/team/list');\n        if (response.status === 200 && response.data) {\n          console.log(\"团队列表数据:\", response.data);\n          this.teams = response.data; // 假设返回的数据包含团队列表\n          console.log(response.data);\n        } else {\n          console.error(\"服务器返回了不符合预期的响应\", response);\n        }\n      } catch (error) {\n        if (error.response) {\n          // 服务器响应了错误状态码\n          console.error(\"服务器错误:\", error.response.data);\n        } else if (error.request) {\n          // 请求没有收到响应\n          console.error(\"没有收到响应:\", error.request);\n        } else {\n          // 其他类型的错误（如请求配置错误）\n          console.error(\"请求错误:\", error.message);\n        }\n      }\n    },\n    search(id) {\n      try {\n        axios.get('http://localhost:8080/team/${id}').then(response => {\n          this.teams = [response.data];\n        }).catch(error => {\n          this.$message.error(\"查询失败\");\n        });\n      } catch (error) {\n        console.error(\"查询过程中才出现异常\", error);\n      }\n    },\n    reset() {\n      // 重置搜索条件并重新加载数据\n      this.searchQuery = '';\n      this.load();\n    },\n    handleAdd() {\n      // 处理新增操作\n      console.log(\"新增团队\");\n    },\n    delBatch() {\n      // 批量删除选中的团队\n      console.log(\"批量删除:\", this.selectedTeams);\n      this.selectedTeams.forEach(team => {\n        this.del(team.teamId);\n      });\n    },\n    async del(teamId) {\n      try {\n        await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n        this.load(); // 删除后重新加载数据\n      } catch (error) {\n        console.error(\"删除失败:\", error);\n      }\n    },\n    handleEdit(row) {\n      // 编辑操作，可以跳转到编辑页面或打开编辑对话框\n      console.log(\"编辑团队:\", row);\n    },\n    handleSelectionChange(val) {\n      this.selectedTeams = val; // 更新选中的团队列表\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","teams","selectedTeams","created","load","methods","response","get","status","console","log","error","request","message","search","id","then","catch","$message","reset","handleAdd","delBatch","forEach","team","del","teamId","delete","handleEdit","row","handleSelectionChange","val"],"sources":["src/views/manage/TeamView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"search\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入账号查询\" style=\"width: 200px\"></el-input>\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"search\">查询</el-button>\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n        </div>\n\n        <div class=\"operation\">\n            <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n        </div>\n\n        <div class=\"table\">\n            <el-table :data=\"teams\" @selection-change=\"handleSelectionChange\">\n                <!-- <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column> -->\n                <el-table-column prop=\"teamId\" label=\"团队ID\" width=\"70\" align=\"center\" sortable></el-table-column>\n                <el-table-column prop=\"teamName\" label=\"团队名称\"></el-table-column>\n                <el-table-column prop=\"virtualCoins\" label=\"虚拟币数量\"></el-table-column>\n                <el-table-column prop=\"creationDate\" label=\"入住日期\"></el-table-column>\n\n                <el-table-column label=\"操作\" align=\"center\" width=\"180\">\n                    <template v-slot=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.teamId)\">删除</el-button>\n                    </template>\n                </el-table-column>\n\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            searchQuery: '', // 搜索关键词\n            teams: [], // 团队数据列表\n            selectedTeams: [], // 选中的团队数据\n        };\n    },\n    created() {\n        this.load(); // 页面加载时获取数据\n    },\n    methods: {\n        async load() {\n            try {\n                const response = await axios.get('http://localhost:8080/team/list');\n                if (response.status === 200 && response.data) {\n                    console.log(\"团队列表数据:\", response.data);\n                    this.teams = response.data; // 假设返回的数据包含团队列表\n                    console.log(response.data)\n                } else {\n                    console.error(\"服务器返回了不符合预期的响应\", response);\n                }\n            } catch (error) {\n                if (error.response) {\n                    // 服务器响应了错误状态码\n                    console.error(\"服务器错误:\", error.response.data);\n                } else if (error.request) {\n                    // 请求没有收到响应\n                    console.error(\"没有收到响应:\", error.request);\n                } else {\n                    // 其他类型的错误（如请求配置错误）\n                    console.error(\"请求错误:\", error.message);\n                }\n            }\n        }\n        ,\n        search(id) {\n            try {\n                axios.get('http://localhost:8080/team/${id}').then(\n                    response => {\n                        this.teams = [response.data];\n                    }\n                ).catch(error => {\n                    this.$message.error(\"查询失败\");\n                })\n            } catch (error) {\n                console.error(\"查询过程中才出现异常\", error);\n            }\n\n        },\n        reset() {\n            // 重置搜索条件并重新加载数据\n            this.searchQuery = '';\n            this.load();\n        },\n        handleAdd() {\n            // 处理新增操作\n            console.log(\"新增团队\");\n        },\n        delBatch() {\n            // 批量删除选中的团队\n            console.log(\"批量删除:\", this.selectedTeams);\n            this.selectedTeams.forEach(team => {\n                this.del(team.teamId);\n            });\n        },\n        async del(teamId) {\n            try {\n                await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n                this.load(); // 删除后重新加载数据\n            } catch (error) {\n                console.error(\"删除失败:\", error);\n            }\n        },\n        handleEdit(row) {\n            // 编辑操作，可以跳转到编辑页面或打开编辑对话框\n            console.log(\"编辑团队:\", row);\n        },\n        handleSelectionChange(val) {\n            this.selectedTeams = val; // 更新选中的团队列表\n        }\n    }\n};\n</script>\n\n<style scoped>\n.search,\n.operation {\n    margin-bottom: 15px;\n}\n</style>"],"mappings":"AAkCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,KAAA;MAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA,MAAAD,KAAA;MACA;QACA,MAAAE,QAAA,SAAAR,KAAA,CAAAS,GAAA;QACA,IAAAD,QAAA,CAAAE,MAAA,YAAAF,QAAA,CAAAP,IAAA;UACAU,OAAA,CAAAC,GAAA,YAAAJ,QAAA,CAAAP,IAAA;UACA,KAAAE,KAAA,GAAAK,QAAA,CAAAP,IAAA;UACAU,OAAA,CAAAC,GAAA,CAAAJ,QAAA,CAAAP,IAAA;QACA;UACAU,OAAA,CAAAE,KAAA,mBAAAL,QAAA;QACA;MACA,SAAAK,KAAA;QACA,IAAAA,KAAA,CAAAL,QAAA;UACA;UACAG,OAAA,CAAAE,KAAA,WAAAA,KAAA,CAAAL,QAAA,CAAAP,IAAA;QACA,WAAAY,KAAA,CAAAC,OAAA;UACA;UACAH,OAAA,CAAAE,KAAA,YAAAA,KAAA,CAAAC,OAAA;QACA;UACA;UACAH,OAAA,CAAAE,KAAA,UAAAA,KAAA,CAAAE,OAAA;QACA;MACA;IACA;IAEAC,OAAAC,EAAA;MACA;QACAjB,KAAA,CAAAS,GAAA,qCAAAS,IAAA,CACAV,QAAA;UACA,KAAAL,KAAA,IAAAK,QAAA,CAAAP,IAAA;QACA,CACA,EAAAkB,KAAA,CAAAN,KAAA;UACA,KAAAO,QAAA,CAAAP,KAAA;QACA;MACA,SAAAA,KAAA;QACAF,OAAA,CAAAE,KAAA,eAAAA,KAAA;MACA;IAEA;IACAQ,MAAA;MACA;MACA,KAAAnB,WAAA;MACA,KAAAI,IAAA;IACA;IACAgB,UAAA;MACA;MACAX,OAAA,CAAAC,GAAA;IACA;IACAW,SAAA;MACA;MACAZ,OAAA,CAAAC,GAAA,eAAAR,aAAA;MACA,KAAAA,aAAA,CAAAoB,OAAA,CAAAC,IAAA;QACA,KAAAC,GAAA,CAAAD,IAAA,CAAAE,MAAA;MACA;IACA;IACA,MAAAD,IAAAC,MAAA;MACA;QACA,MAAA3B,KAAA,CAAA4B,MAAA,sCAAAD,MAAA;QACA,KAAArB,IAAA;MACA,SAAAO,KAAA;QACAF,OAAA,CAAAE,KAAA,UAAAA,KAAA;MACA;IACA;IACAgB,WAAAC,GAAA;MACA;MACAnB,OAAA,CAAAC,GAAA,UAAAkB,GAAA;IACA;IACAC,sBAAAC,GAAA;MACA,KAAA5B,aAAA,GAAA4B,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}