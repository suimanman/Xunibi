{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      teamList: [],\n      // 团队数据列表\n      searchQuery: null,\n      tableData: [],\n      // 假数据容器\n      dialogVisible: false,\n      // 控制弹窗显示\n      selectedRow: null,\n      // 当前操作的行数据\n      coinAmount: 0 // 增加的虚拟币数量\n    };\n  },\n  created() {\n    // // 生成假数据\n    // this.tableData = Array.from({ length: 10 }).map((_, index) => ({\n    //     teamId: `T${1000 + index}`, // 假团队ID\n    //     teamName: `团队${index + 1}`, // 假团队名称\n    //     material: `材料${index + 1}`, // 假审核材料\n  },\n  mounted() {\n    this.getAchievementList();\n  },\n  methods: {\n    search() {\n      // 检查输入是否合法\n      if (!this.searchQuery) {\n        this.$message.warning(\"请输入团队Id后再查询\");\n        return;\n      }\n\n      // 发起请求\n      axios.get(`http://localhost:8080/gain/achievementListById/${this.searchQuery}`).then(response => {\n        console.log(\"获取指定团队的待审核列表信息:\", response.data);\n        if (response.data.code === 200) {\n          // 更新表格数据\n          this.tableData = response.data.data.map(item => ({\n            ...item,\n            material: item.description // 设置审核材料字段\n          }));\n          if (this.tableData.length === 0) {\n            this.$message.info(\"未找到符合条件的数据\");\n          }\n        } else {\n          this.$message.error(response.data.msg || \"查询失败\");\n        }\n      }).catch(error => {\n        console.error(error);\n        this.$message.error(\"查询失败\");\n      });\n    },\n    // getAchievementList() {\n    //     axios\n    //         .get(\"http://localhost:8080/gain/achievementList\")\n    //         .then((response) => {\n    //             console.log(\"获取待审核列表信息:\", response.data);\n    //             if (response.data.code === 200) {\n\n    //                 this.tableData = response.data.data.map((item) => ({\n    //                     ...item,\n    //                     material: item.description,\n    //                 })); // 设置待审核成就列表\n    //             } else {\n    //                 this.$message.error(response.data.msg || \"获取待审核列表失败\");\n    //             }\n    //         })\n    //         .catch((error) => {\n    //             console.error(error);\n    //             this.$message.error(\"获取待审核列表失败\");\n    //         });\n    // },\n\n    async getAchievementList() {\n      try {\n        const [achievementListResponse, teamListResponse] = await Promise.all([axios.get(\"http://localhost:8080/gain/achievementList\"), axios.get(\"http://localhost:8080/team/list\")]);\n        if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n          this.tableData = achievementListResponse.data.data.map(item => {\n            const team = teamListResponse.data.find(t => t.teamId === item.teamId);\n            return {\n              ...item,\n              material: item.description,\n              teamName: team ? team.teamName : \"未知\"\n            };\n          });\n        }\n      } catch (error) {\n        console.error(\"获取待审核列表失败:\", error);\n        this.$message.error(\"获取待审核列表失败，请稍后重试\");\n      }\n    },\n    openDialog(row) {\n      this.selectedRow = row;\n      this.coinAmount = 0;\n      this.dialogVisible = true;\n    },\n    handlePass() {\n      if (!this.selectedRow) return;\n      axios.post(\"http://localhost:8080/gain/reward/achievement\", {\n        achievementId: this.selectedRow.achievementId,\n        teamId: this.selectedRow.teamId,\n        coinAwarded: this.coinAmount,\n        status: \"已通过\"\n      }).then(response => {\n        if (response.data.code === 200) {\n          this.$message.success(\"审核通过成功\");\n          this.dialogVisible = false;\n          this.selectedRow.status = \"已通过\";\n          this.coinAmount = 0;\n        } else {\n          this.$message.error(response.data.msg || \"审核失败\");\n        }\n      }).catch(error => {\n        console.error(error);\n        this.$message.error(\"审核失败\");\n      });\n    },\n    handleNoPass(row) {\n      axios.post(\"http://localhost:8080/gain/reward/achievement\", {\n        achievementId: row.achievementId,\n        teamId: row.teamId,\n        status: \"未通过\",\n        coinAwarded: 0\n      }).then(response => {\n        if (response.data.code === 200) {\n          this.$message.success(\"审核不通过成功\");\n          row.status = \"未通过\";\n        } else {\n          this.$message.error(response.data.msg || \"操作失败\");\n        }\n      }).catch(error => {\n        console.error(error);\n        this.$message.error(\"操作失败\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","teamList","searchQuery","tableData","dialogVisible","selectedRow","coinAmount","created","mounted","getAchievementList","methods","search","$message","warning","get","then","response","console","log","code","map","item","material","description","length","info","error","msg","catch","achievementListResponse","teamListResponse","Promise","all","status","team","find","t","teamId","teamName","openDialog","row","handlePass","post","achievementId","coinAwarded","success","handleNoPass"],"sources":["src/views/manage/MaterialReviewView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"header\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入团队Id\" style=\"width: 250px\"></el-input>\n            <el-button type=\"info\" plain @click=\"search\">查询</el-button>\n            <el-button type=\"warning\" plain @click=\"reset\">重置</el-button>\n        </div>\n\n        <div class=\"table-wrapper\">\n            <el-table ref=\"filterTable\" :data=\"tableData\" style=\"width: 100%\" border>\n                <el-table-column prop=\"achievementId\" label=\"id\" align=\"center\" width=\"100px\">\n                </el-table-column>\n                <el-table-column prop=\"material\" label=\"审核材料\" align=\"left\">\n                </el-table-column>\n                <el-table-column prop=\"achievementType\" label=\"审核材料类型\" align=\"center\" width=\"150px\">\n                </el-table-column>\n                <el-table-column prop=\"teamId\" label=\"提交团队Id\" align=\"center\" width=\"100px\">\n                </el-table-column>\n                <el-table-column prop=\"teamName\" label=\"提交团队名称\" align=\"center\" width=\"100px\"></el-table-column>\n                <el-table-column prop=\"status\" label=\"审核状态\" align=\"center\" width=\"100px\">\n                </el-table-column>\n                <el-table-column label=\"操作\" align=\"center\" width=\"300px\">\n                    <template v-slot=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" plain :disabled=\"scope.row.reviewProcess === '已通过'\"\n                            @click=\"openDialog(scope.row)\">审核通过</el-button>\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"handleNoPass(scope.row)\">审核不通过</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n\n        <!-- 审核通过弹窗 -->\n        <el-dialog title=\"增加虚拟币\" :visible.sync=\"dialogVisible\" width=\"400px\">\n            <div>\n                <el-form>\n                    <el-form-item label=\"增加虚拟币数量\">\n                        <el-input-number v-model=\"coinAmount\" :min=\"0\" :max=\"1000\" label=\"虚拟币\" />\n                    </el-form-item>\n                </el-form>\n            </div>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"handlePass\">确认</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nexport default {\n    data() {\n        return {\n            teamList: [], // 团队数据列表\n            searchQuery: null,\n            tableData: [], // 假数据容器\n            dialogVisible: false, // 控制弹窗显示\n            selectedRow: null, // 当前操作的行数据\n            coinAmount: 0, // 增加的虚拟币数量\n        };\n    },\n    created() {\n        // // 生成假数据\n        // this.tableData = Array.from({ length: 10 }).map((_, index) => ({\n        //     teamId: `T${1000 + index}`, // 假团队ID\n        //     teamName: `团队${index + 1}`, // 假团队名称\n        //     material: `材料${index + 1}`, // 假审核材料\n\n    },\n    mounted() {\n        this.getAchievementList();\n    },\n    methods: {\n        search() {\n            // 检查输入是否合法\n            if (!this.searchQuery) {\n                this.$message.warning(\"请输入团队Id后再查询\");\n                return;\n            }\n\n            // 发起请求\n            axios\n                .get(`http://localhost:8080/gain/achievementListById/${this.searchQuery}`)\n                .then((response) => {\n                    console.log(\"获取指定团队的待审核列表信息:\", response.data);\n                    if (response.data.code === 200) {\n                        // 更新表格数据\n                        this.tableData = response.data.data.map((item) => ({\n                            ...item,\n                            material: item.description, // 设置审核材料字段\n                        }));\n                        if (this.tableData.length === 0) {\n                            this.$message.info(\"未找到符合条件的数据\");\n                        }\n                    } else {\n                        this.$message.error(response.data.msg || \"查询失败\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    this.$message.error(\"查询失败\");\n                });\n        },\n\n        // getAchievementList() {\n        //     axios\n        //         .get(\"http://localhost:8080/gain/achievementList\")\n        //         .then((response) => {\n        //             console.log(\"获取待审核列表信息:\", response.data);\n        //             if (response.data.code === 200) {\n\n        //                 this.tableData = response.data.data.map((item) => ({\n        //                     ...item,\n        //                     material: item.description,\n        //                 })); // 设置待审核成就列表\n        //             } else {\n        //                 this.$message.error(response.data.msg || \"获取待审核列表失败\");\n        //             }\n        //         })\n        //         .catch((error) => {\n        //             console.error(error);\n        //             this.$message.error(\"获取待审核列表失败\");\n        //         });\n        // },\n\n        async getAchievementList() {\n            try {\n                const [achievementListResponse, teamListResponse] = await Promise.all([\n                    axios.get(\"http://localhost:8080/gain/achievementList\"),\n                    axios.get(\"http://localhost:8080/team/list\"),\n                ]);\n                if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n                    this.tableData = achievementListResponse.data.data.map((item) => {\n                        const team = teamListResponse.data.find((t) => t.teamId === item.teamId);\n                        return {\n                            ...item,\n                            material: item.description,\n                            teamName: team ? team.teamName : \"未知\",\n                        }\n                    })\n                }\n            } catch (error) {\n                console.error(\"获取待审核列表失败:\", error);\n                this.$message.error(\"获取待审核列表失败，请稍后重试\");\n            }\n        },\n\n        openDialog(row) {\n            this.selectedRow = row;\n            this.coinAmount = 0;\n            this.dialogVisible = true;\n        },\n        handlePass() {\n            if (!this.selectedRow) return;\n            axios\n                .post(\"http://localhost:8080/gain/reward/achievement\", {\n                    achievementId: this.selectedRow.achievementId,\n                    teamId: this.selectedRow.teamId,\n                    coinAwarded: this.coinAmount,\n                    status: \"已通过\",\n                })\n                .then((response) => {\n                    if (response.data.code === 200) {\n                        this.$message.success(\"审核通过成功\");\n                        this.dialogVisible = false;\n                        this.selectedRow.status = \"已通过\";\n                        this.coinAmount = 0;\n                    } else {\n                        this.$message.error(response.data.msg || \"审核失败\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    this.$message.error(\"审核失败\");\n                });\n        },\n        handleNoPass(row) {\n            axios\n                .post(\"http://localhost:8080/gain/reward/achievement\", {\n                    achievementId: row.achievementId,\n                    teamId: row.teamId,\n                    status: \"未通过\",\n                    coinAwarded: 0,\n                })\n                .then((response) => {\n                    if (response.data.code === 200) {\n                        this.$message.success(\"审核不通过成功\");\n                        row.status = \"未通过\";\n                    } else {\n                        this.$message.error(response.data.msg || \"操作失败\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(error);\n                    this.$message.error(\"操作失败\");\n                });\n\n        },\n    },\n};\n</script>\n\n<style scoped>\n.container {\n    padding: 20px;\n    background-color: #f9f9f9;\n}\n\n.header {\n    display: flex;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.header .el-input {\n    max-width: 300px;\n}\n\n.table-wrapper {\n    border: 1px solid #e0e0e0;\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    padding: 10px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}