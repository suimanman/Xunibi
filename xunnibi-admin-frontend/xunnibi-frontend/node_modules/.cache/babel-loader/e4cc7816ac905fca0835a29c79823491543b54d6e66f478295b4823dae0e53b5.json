{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      like: true,\n      value1: 4154.564,\n      value2: 1314,\n      title: \"增长人数\",\n      incomeOption: {\n        legend: {},\n        tooltip: {\n          trigger: 'axis',\n          showContent: false\n        },\n        dataset: {\n          source: [['category', '2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'], ['论文', 50, 60, 70, 80, 90, 100], ['竞赛', 40, 50, 60, 70, 80, 90], ['培训', 30, 40, 50, 60, 70, 80]]\n        },\n        xAxis: {\n          type: 'time',\n          axisLabel: {\n            formatter: function (value) {\n              return echarts.format.formatTime('yyyy-MM', value); // 格式化为 yyyy-MM\n            }\n          }\n        },\n        yAxis: {\n          gridIndex: 0\n        },\n        grid: {\n          top: '55%'\n        },\n        series: [{\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'pie',\n          id: 'incomePie',\n          radius: '30%',\n          center: ['50%', '25%'],\n          emphasis: {\n            focus: 'self'\n          },\n          label: {\n            formatter: '{b}: {@2023-01} ({d}%)'\n          },\n          encode: {\n            itemName: 'category',\n            value: '2023-01',\n            tooltip: '2023-01'\n          }\n        }]\n      },\n      // 支出相关图表配置\n      expenseOption: {\n        legend: {},\n        tooltip: {\n          trigger: 'axis',\n          showContent: false\n        },\n        dataset: {\n          source: [['category', '2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'], ['照相机', 20, 30, 40, 50, 60, 70], ['打印设备', 30, 40, 50, 60, 70, 80], ['其他设备', 50, 60, 70, 80, 90, 100]]\n        },\n        xAxis: {\n          type: 'time',\n          axisLabel: {\n            formatter: function (value) {\n              return echarts.format.formatTime('yyyy-MM', value); // 格式化为 yyyy-MM\n            }\n          }\n        },\n        yAxis: {\n          gridIndex: 0\n        },\n        grid: {\n          top: '55%'\n        },\n        series: [{\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'pie',\n          id: 'expensePie',\n          radius: '30%',\n          center: ['50%', '25%'],\n          emphasis: {\n            focus: 'self'\n          },\n          label: {\n            formatter: '{b}: {@2023-01} ({d}%)'\n          },\n          encode: {\n            itemName: 'category',\n            value: '2023-01',\n            tooltip: '2023-01'\n          }\n        }]\n      }\n    };\n  },\n  mounted() {\n    // 初始化收入图表\n    this.incomeChart = echarts.init(this.$refs.incomeChart);\n    this.incomeChart.setOption(this.incomeOption);\n\n    // 初始化支出图表\n    this.expenseChart = echarts.init(this.$refs.expenseChart);\n    this.expenseChart.setOption(this.expenseOption);\n\n    // 设置图表联动\n    this.setupChartInteractions();\n  },\n  methods: {\n    setupChartInteractions() {\n      // 收入图表联动：当鼠标悬停在折线图上时，更新饼图的显示\n      this.incomeChart.on('updateAxisPointer', event => {\n        const xAxisInfo = event.axesInfo[0];\n        if (xAxisInfo) {\n          const dimension = xAxisInfo.value + 1; // 获取当前选中的维度\n          this.incomeChart.setOption({\n            series: [{\n              id: 'incomePie',\n              label: {\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n              },\n              encode: {\n                value: dimension,\n                tooltip: dimension\n              }\n            }]\n          });\n        }\n      });\n\n      // 支出图表联动：当鼠标悬停在折线图上时，更新饼图的显示\n      this.expenseChart.on('updateAxisPointer', event => {\n        const xAxisInfo = event.axesInfo[0];\n        if (xAxisInfo) {\n          const dimension = xAxisInfo.value + 1; // 获取当前选中的维度\n          this.expenseChart.setOption({\n            series: [{\n              id: 'expensePie',\n              label: {\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n              },\n              encode: {\n                value: dimension,\n                tooltip: dimension\n              }\n            }]\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","data","like","value1","value2","title","incomeOption","legend","tooltip","trigger","showContent","dataset","source","xAxis","type","axisLabel","formatter","value","format","formatTime","yAxis","gridIndex","grid","top","series","smooth","seriesLayoutBy","emphasis","focus","id","radius","center","label","encode","itemName","expenseOption","mounted","incomeChart","init","$refs","setOption","expenseChart","setupChartInteractions","methods","on","event","xAxisInfo","axesInfo","dimension"],"sources":["src/views/manage/XunibiView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"header\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">入住团队总数</div>\n                        <div class=\"value\">{{ value2.toLocaleString(undefined, { minimumFractionDigits: 2 }) }}</div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">入住总人数</div>\n                        <div class=\"value\">1000</div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">今日签到人数</div>\n                        <div class=\"value\">\n                            <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n                            {{ value1.toLocaleString(undefined, { minimumFractionDigits: 2 }) }}\n                            <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n                        </div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">Feedback</div>\n                        <div class=\"value\">\n                            {{ like ? 521 : 520 }}\n                            <span @click=\"like = !like\" class=\"like\">\n                                <i class=\"el-icon-star-on\" style=\"color:red\" v-show=\"like\"></i>\n                                <i class=\"el-icon-star-off\" v-show=\"!like\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </el-col>\n            </el-row>\n        </div>\n\n        <div class=\"main\">\n            <div ref=\"incomeChart\" style=\"height: 400px;\"></div>\n            <div ref=\"expenseChart\" style=\"height: 400px;\"></div>\n            < </div>\n                <div class=\"footer\">\n                    11111\n                </div>\n        </div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\nexport default {\n    data() {\n        return {\n            like: true,\n            value1: 4154.564,\n            value2: 1314,\n            title: \"增长人数\",\n\n            incomeOption: {\n                legend: {},\n                tooltip: {\n                    trigger: 'axis',\n                    showContent: false\n                },\n                dataset: {\n                    source: [\n                        ['category', '2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'],\n                        ['论文', 50, 60, 70, 80, 90, 100],\n                        ['竞赛', 40, 50, 60, 70, 80, 90],\n                        ['培训', 30, 40, 50, 60, 70, 80]\n                    ]\n                },\n                xAxis: {\n                    type: 'time',\n                    axisLabel: {\n                        formatter: function (value) {\n                            return echarts.format.formatTime('yyyy-MM', value);  // 格式化为 yyyy-MM\n                        }\n                    }\n                },\n                yAxis: { gridIndex: 0 },\n                grid: { top: '55%' },\n                series: [\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'pie',\n                        id: 'incomePie',\n                        radius: '30%',\n                        center: ['50%', '25%'],\n                        emphasis: { focus: 'self' },\n                        label: {\n                            formatter: '{b}: {@2023-01} ({d}%)'\n                        },\n                        encode: {\n                            itemName: 'category',\n                            value: '2023-01',\n                            tooltip: '2023-01'\n                        }\n                    }\n                ]\n            },\n            // 支出相关图表配置\n            expenseOption: {\n                legend: {},\n                tooltip: {\n                    trigger: 'axis',\n                    showContent: false\n                },\n                dataset: {\n                    source: [\n                        ['category', '2023-01', '2023-02', '2023-03', '2023-04', '2023-05', '2023-06'],\n                        ['照相机', 20, 30, 40, 50, 60, 70],\n                        ['打印设备', 30, 40, 50, 60, 70, 80],\n                        ['其他设备', 50, 60, 70, 80, 90, 100]\n                    ]\n                },\n                xAxis: {\n                    type: 'time',\n                    axisLabel: {\n                        formatter: function (value) {\n                            return echarts.format.formatTime('yyyy-MM', value);  // 格式化为 yyyy-MM\n                        }\n                    }\n                },\n                yAxis: { gridIndex: 0 },\n                grid: { top: '55%' },\n                series: [\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'pie',\n                        id: 'expensePie',\n                        radius: '30%',\n                        center: ['50%', '25%'],\n                        emphasis: { focus: 'self' },\n                        label: {\n                            formatter: '{b}: {@2023-01} ({d}%)'\n                        },\n                        encode: {\n                            itemName: 'category',\n                            value: '2023-01',\n                            tooltip: '2023-01'\n                        }\n                    }\n                ]\n            }\n        };\n    },\n\n    mounted() {\n        // 初始化收入图表\n        this.incomeChart = echarts.init(this.$refs.incomeChart);\n        this.incomeChart.setOption(this.incomeOption);\n\n        // 初始化支出图表\n        this.expenseChart = echarts.init(this.$refs.expenseChart);\n        this.expenseChart.setOption(this.expenseOption);\n\n        // 设置图表联动\n        this.setupChartInteractions();\n    },\n\n\n    methods: {\n        setupChartInteractions() {\n            // 收入图表联动：当鼠标悬停在折线图上时，更新饼图的显示\n            this.incomeChart.on('updateAxisPointer', (event) => {\n                const xAxisInfo = event.axesInfo[0];\n                if (xAxisInfo) {\n                    const dimension = xAxisInfo.value + 1;  // 获取当前选中的维度\n                    this.incomeChart.setOption({\n                        series: [\n                            {\n                                id: 'incomePie',\n                                label: {\n                                    formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                                },\n                                encode: {\n                                    value: dimension,\n                                    tooltip: dimension\n                                }\n                            }\n                        ]\n                    });\n                }\n            });\n\n            // 支出图表联动：当鼠标悬停在折线图上时，更新饼图的显示\n            this.expenseChart.on('updateAxisPointer', (event) => {\n                const xAxisInfo = event.axesInfo[0];\n                if (xAxisInfo) {\n                    const dimension = xAxisInfo.value + 1;  // 获取当前选中的维度\n                    this.expenseChart.setOption({\n                        series: [\n                            {\n                                id: 'expensePie',\n                                label: {\n                                    formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                                },\n                                encode: {\n                                    value: dimension,\n                                    tooltip: dimension\n                                }\n                            }\n                        ]\n                    });\n                }\n            });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.statistic-box {\n    background: #fff;\n    border: 1px solid #ddd;\n    padding: 10px;\n    border-radius: 5px;\n    text-align: center;\n}\n\n.statistic-box .title {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.statistic-box .value {\n    font-size: 20px;\n}\n\n.like {\n    cursor: pointer;\n    font-size: 25px;\n    display: inline-block;\n}\n\n.chart-container {\n    width: 100%;\n    height: 400px;\n}\n\n.main {\n    margin-top: 20px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 20px;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}