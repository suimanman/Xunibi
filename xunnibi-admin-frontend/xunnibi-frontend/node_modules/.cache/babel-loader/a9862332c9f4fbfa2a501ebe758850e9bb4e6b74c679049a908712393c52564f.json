{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      teams: [],\n      // 所有团队数据\n      currentPage: 1,\n      // 当前页\n      pageSize: 5,\n      // 每页显示数量\n      paginatedTeams: [],\n      // 当前页显示的数据\n      dialogVisible: false,\n      newTeam: {\n        teamId: null,\n        teamName: \"\",\n        virtualCoins: 0,\n        creationDate: null\n      },\n      editMode: false\n    };\n  },\n  created() {\n    this.load(); // 页面加载时获取数据\n  },\n  mounted() {\n    this.load();\n  },\n  methods: {\n    async load() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/team/list\");\n        if (response.status === 200 && response.data) {\n          this.teams = response.data;\n          this.handlePageChange(this.currentPage);\n        }\n      } catch (error) {\n        console.error(\"数据加载失败:\", error);\n      }\n    },\n    search() {\n      if (!this.searchQuery) {\n        this.$message.error(\"请输入团队ID\");\n        return;\n      }\n      this.teams = this.teams.filter(team => team.teamId.toString().includes(this.searchQuery));\n      this.handlePageChange(1);\n    },\n    reset() {\n      this.searchQuery = \"\";\n      this.load();\n    },\n    handlePageChange(page) {\n      this.currentPage = page;\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      this.paginatedTeams = this.teams.slice(start, end);\n    },\n    handleAdd() {\n      this.newTeam = {\n        teamId: null,\n        teamName: \"\",\n        virtualCoins: 0,\n        creationDate: null\n      };\n      this.editMode = false;\n      this.dialogVisible = true;\n    },\n    async del(teamId) {\n      try {\n        await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n        this.$message.success(\"删除成功\");\n        this.load();\n      } catch (error) {\n        console.error(\"删除失败:\", error);\n        this.$message.error(\"删除失败\");\n      }\n    },\n    handleEdit(row) {\n      this.newTeam = {\n        ...row\n      };\n      this.editMode = true;\n      this.dialogVisible = true;\n    },\n    async saveTeam() {\n      try {\n        if (this.editMode) {\n          await axios.put(`http://localhost:8080/team/update/${this.newTeam.teamId}`, this.newTeam);\n          this.$message.success(\"更新成功\");\n        } else {\n          await axios.post(\"http://localhost:8080/team/create\", this.newTeam);\n          this.$message.success(\"新增成功\");\n        }\n        this.dialogVisible = false;\n        this.load();\n      } catch (error) {\n        console.error(\"保存失败:\", error);\n        this.$message.error(\"保存失败\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","teams","currentPage","pageSize","paginatedTeams","dialogVisible","newTeam","teamId","teamName","virtualCoins","creationDate","editMode","created","load","mounted","methods","response","get","status","handlePageChange","error","console","search","$message","filter","team","toString","includes","reset","page","start","end","slice","handleAdd","del","delete","success","handleEdit","row","saveTeam","put","post"],"sources":["src/views/manage/TeamView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"search\">\n      <el-input v-model=\"searchQuery\" placeholder=\"请输入团队ID查询\" style=\"width: 200px\"></el-input>\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"search\" icon=\"el-icon-zoom-in\">查询</el-button>\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\" icon=\"el-icon-refresh-left\">重置</el-button>\n      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n    </div>\n    <div class=\"table\">\n      <el-table :data=\"paginatedTeams\" @selection-change=\"handleSelectionChange\" border>\n        <el-table-column prop=\"teamId\" label=\"团队ID\" sortable></el-table-column>\n        <el-table-column prop=\"teamName\" label=\"团队名称\"></el-table-column>\n        <el-table-column prop=\"virtualCoins\" label=\"虚拟币数量\"></el-table-column>\n        <el-table-column prop=\"creationDate\" label=\"入住日期\"></el-table-column>\n        <el-table-column label=\"操作\">\n          <template v-slot=\"scope\">\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.teamId)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </div>\n    <el-pagination\n        v-if=\"teams.length > 0\"\n        background\n        layout=\"prev, pager, next, sizes, total, jumper\"\n        :page-size=\"pageSize\"\n        :current-page.sync=\"currentPage\"\n        :total=\"teams.length\"\n        @current-change=\"handlePageChange\"\n    >\n    </el-pagination>\n\n    <el-dialog :title=\"editMode ? '编辑团队' : '新增团队'\" :visible.sync=\"dialogVisible\">\n      <el-form :model=\"newTeam\">\n        <el-form-item label=\"团队名称\">\n          <el-input v-model=\"newTeam.teamName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"虚拟币数量\">\n          <el-input v-model=\"newTeam.virtualCoins\" type=\"number\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"入住日期\">\n          <el-date-picker v-model=\"newTeam.creationDate\" type=\"date\" placeholder=\"选择日期\"></el-date-picker>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"saveTeam\">保存</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      teams: [], // 所有团队数据\n      currentPage: 1, // 当前页\n      pageSize: 5, // 每页显示数量\n      paginatedTeams: [], // 当前页显示的数据\n      dialogVisible: false,\n      newTeam: {\n        teamId: null,\n        teamName: \"\",\n        virtualCoins: 0,\n        creationDate: null,\n      },\n      editMode: false,\n    };\n  },\n  created() {\n    this.load(); // 页面加载时获取数据\n  },\n\n  mounted() {\n    this.load()\n  },\n  methods: {\n    async load() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/team/list\");\n        if (response.status === 200 && response.data) {\n          this.teams = response.data;\n          this.handlePageChange(this.currentPage);\n        }\n      } catch (error) {\n        console.error(\"数据加载失败:\", error);\n      }\n    },\n    search() {\n      if (!this.searchQuery) {\n        this.$message.error(\"请输入团队ID\");\n        return;\n      }\n      this.teams = this.teams.filter((team) => team.teamId.toString().includes(this.searchQuery));\n      this.handlePageChange(1);\n    },\n    reset() {\n      this.searchQuery = \"\";\n      this.load();\n    },\n    handlePageChange(page) {\n      this.currentPage = page;\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = this.currentPage * this.pageSize;\n      this.paginatedTeams = this.teams.slice(start, end);\n    },\n    handleAdd() {\n      this.newTeam = {teamId: null, teamName: \"\", virtualCoins: 0, creationDate: null};\n      this.editMode = false;\n      this.dialogVisible = true;\n    },\n    async del(teamId) {\n      try {\n        await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n        this.$message.success(\"删除成功\");\n        this.load();\n      } catch (error) {\n        console.error(\"删除失败:\", error);\n        this.$message.error(\"删除失败\");\n      }\n    },\n    handleEdit(row) {\n      this.newTeam = {...row};\n      this.editMode = true;\n      this.dialogVisible = true;\n    },\n    async saveTeam() {\n      try {\n        if (this.editMode) {\n          await axios.put(`http://localhost:8080/team/update/${this.newTeam.teamId}`, this.newTeam);\n          this.$message.success(\"更新成功\");\n        } else {\n          await axios.post(\"http://localhost:8080/team/create\", this.newTeam);\n          this.$message.success(\"新增成功\");\n        }\n        this.dialogVisible = false;\n        this.load();\n      } catch (error) {\n        console.error(\"保存失败:\", error);\n        this.$message.error(\"保存失败\");\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  background-color: #f9f9f9;\n}\n\n.table {\n  margin-bottom: 20px;\n}\n</style>"],"mappings":";;AAsDA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MACAC,KAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,cAAA;MAAA;MACAC,aAAA;MACAC,OAAA;QACAC,MAAA;QACAC,QAAA;QACAC,YAAA;QACAC,YAAA;MACA;MACAC,QAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,QAAA;IACA,KAAAD,IAAA;EACA;EACAE,OAAA;IACA,MAAAF,KAAA;MACA;QACA,MAAAG,QAAA,SAAAlB,KAAA,CAAAmB,GAAA;QACA,IAAAD,QAAA,CAAAE,MAAA,YAAAF,QAAA,CAAAjB,IAAA;UACA,KAAAE,KAAA,GAAAe,QAAA,CAAAjB,IAAA;UACA,KAAAoB,gBAAA,MAAAjB,WAAA;QACA;MACA,SAAAkB,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;MACA;IACA;IACAE,OAAA;MACA,UAAAtB,WAAA;QACA,KAAAuB,QAAA,CAAAH,KAAA;QACA;MACA;MACA,KAAAnB,KAAA,QAAAA,KAAA,CAAAuB,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAlB,MAAA,CAAAmB,QAAA,GAAAC,QAAA,MAAA3B,WAAA;MACA,KAAAmB,gBAAA;IACA;IACAS,MAAA;MACA,KAAA5B,WAAA;MACA,KAAAa,IAAA;IACA;IACAM,iBAAAU,IAAA;MACA,KAAA3B,WAAA,GAAA2B,IAAA;MACA,MAAAC,KAAA,SAAA5B,WAAA,aAAAC,QAAA;MACA,MAAA4B,GAAA,QAAA7B,WAAA,QAAAC,QAAA;MACA,KAAAC,cAAA,QAAAH,KAAA,CAAA+B,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;IACAE,UAAA;MACA,KAAA3B,OAAA;QAAAC,MAAA;QAAAC,QAAA;QAAAC,YAAA;QAAAC,YAAA;MAAA;MACA,KAAAC,QAAA;MACA,KAAAN,aAAA;IACA;IACA,MAAA6B,IAAA3B,MAAA;MACA;QACA,MAAAT,KAAA,CAAAqC,MAAA,sCAAA5B,MAAA;QACA,KAAAgB,QAAA,CAAAa,OAAA;QACA,KAAAvB,IAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAAG,QAAA,CAAAH,KAAA;MACA;IACA;IACAiB,WAAAC,GAAA;MACA,KAAAhC,OAAA;QAAA,GAAAgC;MAAA;MACA,KAAA3B,QAAA;MACA,KAAAN,aAAA;IACA;IACA,MAAAkC,SAAA;MACA;QACA,SAAA5B,QAAA;UACA,MAAAb,KAAA,CAAA0C,GAAA,2CAAAlC,OAAA,CAAAC,MAAA,SAAAD,OAAA;UACA,KAAAiB,QAAA,CAAAa,OAAA;QACA;UACA,MAAAtC,KAAA,CAAA2C,IAAA,2CAAAnC,OAAA;UACA,KAAAiB,QAAA,CAAAa,OAAA;QACA;QACA,KAAA/B,aAAA;QACA,KAAAQ,IAAA;MACA,SAAAO,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAAG,QAAA,CAAAH,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}