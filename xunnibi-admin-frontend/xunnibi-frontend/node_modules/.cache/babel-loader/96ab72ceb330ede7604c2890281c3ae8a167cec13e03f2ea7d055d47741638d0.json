{"ast":null,"code":"import RentTable from \"@/components/RentTable.vue\";\nimport axios from \"axios\";\nexport default {\n  components: {\n    RentTable\n  },\n  data() {\n    return {\n      activeTab: \"工位\",\n      // 默认加载的 Tab\n      tableData: [],\n      // 当前 Tab 的表格数据\n      columns: [{\n        prop: \"type\",\n        label: \"物品名称\"\n      }, {\n        prop: \"coinConsumption\",\n        label: \"虚拟币价格\"\n      }, {\n        prop: \"isAvailable\",\n        label: \"是否可用\",\n        slot: \"isAvailableSlot\"\n      }, {\n        prop: \"teamName\",\n        label: \"租用队伍名称\"\n      }]\n    };\n  },\n  methods: {\n    // 通用加载数据方法，根据 activeTab 加载对应数据\n    loadTableData() {\n      let endpoint = this.getEndpoint();\n      axios.get(endpoint).then(response => {\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(`加载${this.activeTab}数据失败：`, error);\n        this.$message.error(`加载${this.activeTab}数据失败，请稍后重试`);\n      });\n    },\n    // 根据 activeTab 获取 API 端点\n    getEndpoint() {\n      if (this.activeTab === \"工位\") return \"/api/stations\";\n      if (this.activeTab === \"相机\") return \"/api/cameras\";\n      if (this.activeTab === \"其他设备\") return \"/api/others\";\n      return \"\";\n    },\n    // 搜索功能\n    searchStationTable(query) {\n      axios.get(\"/api/stations\", {\n        params: {\n          query\n        }\n      }).then(response => {\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(\"搜索工位数据失败：\", error);\n        this.$message.error(\"搜索工位数据失败，请稍后重试\");\n      });\n    },\n    searchCameraTable(query) {\n      axios.get(\"/api/cameras\", {\n        params: {\n          query\n        }\n      }).then(response => {\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(\"搜索相机数据失败：\", error);\n        this.$message.error(\"搜索相机数据失败，请稍后重试\");\n      });\n    },\n    searchOtherTable(query) {\n      axios.get(\"/api/others\", {\n        params: {\n          query\n        }\n      }).then(response => {\n        this.tableData = response.data;\n      }).catch(error => {\n        console.error(\"搜索其他设备数据失败：\", error);\n        this.$message.error(\"搜索其他设备数据失败，请稍后重试\");\n      });\n    },\n    // 重置功能\n    resetStationTable() {\n      this.loadTableData();\n    },\n    resetCameraTable() {\n      this.loadTableData();\n    },\n    resetOtherTable() {\n      this.loadTableData();\n    },\n    // 添加功能（可扩展）\n    handleAddStation() {\n      this.$message.info(\"工位新增功能未实现\");\n    },\n    handleAddCamera() {\n      this.$message.info(\"相机新增功能未实现\");\n    },\n    handleAddOther() {\n      this.$message.info(\"其他设备新增功能未实现\");\n    },\n    // 编辑功能（可扩展）\n    handleEditStation(row) {\n      this.$message.info(`编辑工位 ${row.type}`);\n    },\n    handleEditCamera(row) {\n      this.$message.info(`编辑相机 ${row.type}`);\n    },\n    handleEditOther(row) {\n      this.$message.info(`编辑设备 ${row.type}`);\n    },\n    // 删除功能\n    deleteStationRow(row) {\n      this.confirmDelete(`/api/stations/${row.id}`, \"工位\");\n    },\n    deleteCameraRow(row) {\n      this.confirmDelete(`/api/cameras/${row.id}`, \"相机\");\n    },\n    deleteOtherRow(row) {\n      this.confirmDelete(`/api/others/${row.id}`, \"其他设备\");\n    },\n    confirmDelete(endpoint, label) {\n      this.$confirm(`确定删除${label} ${row.type} 吗？`, \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n      }).then(() => axios.delete(endpoint)).then(() => {\n        this.$message.success(\"删除成功\");\n        this.loadTableData();\n      }).catch(error => {\n        if (error !== \"cancel\") {\n          console.error(`删除${label}失败：`, error);\n          this.$message.error(`删除${label}失败，请稍后重试`);\n        }\n      });\n    }\n  },\n  watch: {\n    // Tab 切换时加载对应数据\n    activeTab() {\n      this.loadTableData();\n    }\n  },\n  mounted() {\n    this.loadTableData(); // 默认加载工位数据\n  }\n};","map":{"version":3,"names":["RentTable","axios","components","data","activeTab","tableData","columns","prop","label","slot","methods","loadTableData","endpoint","getEndpoint","get","then","response","catch","error","console","$message","searchStationTable","query","params","searchCameraTable","searchOtherTable","resetStationTable","resetCameraTable","resetOtherTable","handleAddStation","info","handleAddCamera","handleAddOther","handleEditStation","row","type","handleEditCamera","handleEditOther","deleteStationRow","confirmDelete","id","deleteCameraRow","deleteOtherRow","$confirm","confirmButtonText","cancelButtonText","delete","success","watch","mounted"],"sources":["src/views/manage/RentView.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- Tabs for switching between tables -->\n        <el-tabs type=\"border-card\" v-model=\"activeTab\">\n            <el-tab-pane label=\"工位\" name=\"工位\">\n                <RentTable :columns=\"columns\" :data=\"tableData\" @search=\"searchStationTable\" @reset=\"resetStationTable\"\n                    @add=\"handleAddStation\" @edit=\"handleEditStation\" @delete=\"deleteStationRow\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"相机\" name=\"相机\">\n                <RentTable :columns=\"columns\" :data=\"tableData\" @search=\"searchCameraTable\" @reset=\"resetCameraTable\"\n                    @add=\"handleAddCamera\" @edit=\"handleEditCamera\" @delete=\"deleteCameraRow\" />\n            </el-tab-pane>\n            <el-tab-pane label=\"其他设备\" name=\"其他设备\">\n                <RentTable :columns=\"columns\" :data=\"tableData\" @search=\"searchOtherTable\" @reset=\"resetOtherTable\"\n                    @add=\"handleAddOther\" @edit=\"handleEditOther\" @delete=\"deleteOtherRow\" />\n            </el-tab-pane>\n        </el-tabs>\n    </div>\n</template>\n\n<script>\nimport RentTable from \"@/components/RentTable.vue\";\nimport axios from \"axios\";\n\nexport default {\n    components: { RentTable },\n    data() {\n        return {\n            activeTab: \"工位\", // 默认加载的 Tab\n            tableData: [], // 当前 Tab 的表格数据\n            columns: [\n                { prop: \"type\", label: \"物品名称\" },\n                { prop: \"coinConsumption\", label: \"虚拟币价格\" },\n                { prop: \"isAvailable\", label: \"是否可用\", slot: \"isAvailableSlot\" },\n                { prop: \"teamName\", label: \"租用队伍名称\" },\n            ],\n        };\n    },\n    methods: {\n        // 通用加载数据方法，根据 activeTab 加载对应数据\n        loadTableData() {\n            let endpoint = this.getEndpoint();\n            axios\n                .get(endpoint)\n                .then((response) => {\n                    this.tableData = response.data;\n                })\n                .catch((error) => {\n                    console.error(`加载${this.activeTab}数据失败：`, error);\n                    this.$message.error(`加载${this.activeTab}数据失败，请稍后重试`);\n                });\n        },\n        // 根据 activeTab 获取 API 端点\n        getEndpoint() {\n            if (this.activeTab === \"工位\") return \"/api/stations\";\n            if (this.activeTab === \"相机\") return \"/api/cameras\";\n            if (this.activeTab === \"其他设备\") return \"/api/others\";\n            return \"\";\n        },\n        // 搜索功能\n        searchStationTable(query) {\n            axios\n                .get(\"/api/stations\", { params: { query } })\n                .then((response) => {\n                    this.tableData = response.data;\n                })\n                .catch((error) => {\n                    console.error(\"搜索工位数据失败：\", error);\n                    this.$message.error(\"搜索工位数据失败，请稍后重试\");\n                });\n        },\n        searchCameraTable(query) {\n            axios\n                .get(\"/api/cameras\", { params: { query } })\n                .then((response) => {\n                    this.tableData = response.data;\n                })\n                .catch((error) => {\n                    console.error(\"搜索相机数据失败：\", error);\n                    this.$message.error(\"搜索相机数据失败，请稍后重试\");\n                });\n        },\n        searchOtherTable(query) {\n            axios\n                .get(\"/api/others\", { params: { query } })\n                .then((response) => {\n                    this.tableData = response.data;\n                })\n                .catch((error) => {\n                    console.error(\"搜索其他设备数据失败：\", error);\n                    this.$message.error(\"搜索其他设备数据失败，请稍后重试\");\n                });\n        },\n        // 重置功能\n        resetStationTable() {\n            this.loadTableData();\n        },\n        resetCameraTable() {\n            this.loadTableData();\n        },\n        resetOtherTable() {\n            this.loadTableData();\n        },\n        // 添加功能（可扩展）\n        handleAddStation() {\n            this.$message.info(\"工位新增功能未实现\");\n        },\n        handleAddCamera() {\n            this.$message.info(\"相机新增功能未实现\");\n        },\n        handleAddOther() {\n            this.$message.info(\"其他设备新增功能未实现\");\n        },\n        // 编辑功能（可扩展）\n        handleEditStation(row) {\n            this.$message.info(`编辑工位 ${row.type}`);\n        },\n        handleEditCamera(row) {\n            this.$message.info(`编辑相机 ${row.type}`);\n        },\n        handleEditOther(row) {\n            this.$message.info(`编辑设备 ${row.type}`);\n        },\n        // 删除功能\n        deleteStationRow(row) {\n            this.confirmDelete(`/api/stations/${row.id}`, \"工位\");\n        },\n        deleteCameraRow(row) {\n            this.confirmDelete(`/api/cameras/${row.id}`, \"相机\");\n        },\n        deleteOtherRow(row) {\n            this.confirmDelete(`/api/others/${row.id}`, \"其他设备\");\n        },\n        confirmDelete(endpoint, label) {\n            this.$confirm(\n                `确定删除${label} ${row.type} 吗？`,\n                \"提示\",\n                {\n                    confirmButtonText: \"确定\",\n                    cancelButtonText: \"取消\",\n                    type: \"warning\",\n                }\n            )\n                .then(() => axios.delete(endpoint))\n                .then(() => {\n                    this.$message.success(\"删除成功\");\n                    this.loadTableData();\n                })\n                .catch((error) => {\n                    if (error !== \"cancel\") {\n                        console.error(`删除${label}失败：`, error);\n                        this.$message.error(`删除${label}失败，请稍后重试`);\n                    }\n                });\n        },\n    },\n    watch: {\n        // Tab 切换时加载对应数据\n        activeTab() {\n            this.loadTableData();\n        },\n    },\n    mounted() {\n        this.loadTableData(); // 默认加载工位数据\n    },\n};\n</script>\n\n<style scoped>\n/* 根据需要添加样式 */\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}