{"ast":null,"code":"import Vue from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:8080\"; // 配置后端接口的基础 URL\naxios.defaults.withCredentials = true; // 如果有跨域和登录需要\n\n// 请求拦截器\naxios.interceptors.request.use(config => {\n  const adminData = JSON.parse(localStorage.getItem(\"adminData\"));\n  if (adminData) {\n    config.headers.Authorization = `Bearer ${adminData.token || \"\"}`;\n  }\n  return config;\n});\nVue.config.productionTip = false;\nVue.use(ElementUI);\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app');\n\n// app.vue写在script里面  main.js写在app挂在完之后\nconst debounce = (fn, delay) => {\n  let timer;\n  return (...args) => {\n    if (timer) {\n      clearTimeout(timer);\n    }\n    timer = setTimeout(() => {\n      fn(...args);\n    }, delay);\n  };\n};\nconst _ResizeObserver = window.ResizeObserver;\nwindow.ResizeObserver = class ResizeObserver extends _ResizeObserver {\n  constructor(callback) {\n    callback = debounce(callback, 200);\n    super(callback);\n  }\n};","map":{"version":3,"names":["Vue","App","router","ElementUI","axios","defaults","baseURL","withCredentials","interceptors","request","use","config","adminData","JSON","parse","localStorage","getItem","headers","Authorization","token","productionTip","render","h","$mount","debounce","fn","delay","timer","args","clearTimeout","setTimeout","_ResizeObserver","window","ResizeObserver","constructor","callback"],"sources":["/Users/zz/Desktop/实习课程内容/xunnibi-frontend/xunnibi-frontend/src/main.js"],"sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css'\nimport axios from 'axios'\n\n\naxios.defaults.baseURL = \"http://localhost:8080\"; // 配置后端接口的基础 URL\naxios.defaults.withCredentials = true; // 如果有跨域和登录需要\n\n// 请求拦截器\naxios.interceptors.request.use((config) => {\n  const adminData = JSON.parse(localStorage.getItem(\"adminData\"));\n  if (adminData) {\n    config.headers.Authorization = `Bearer ${adminData.token || \"\"}`;\n  }\n  return config;\n});\n\nVue.config.productionTip = false\nVue.use(ElementUI);\nnew Vue({\n  router,\n  render: h => h(App)\n}).$mount('#app')\n\n// app.vue写在script里面  main.js写在app挂在完之后\nconst debounce = (fn, delay) => {\n  let timer\n  return (...args) => {\n    if (timer) {\n      clearTimeout(timer)\n    }\n    timer = setTimeout(() => {\n      fn(...args)\n    }, delay)\n  }\n}\n\nconst _ResizeObserver = window.ResizeObserver;\nwindow.ResizeObserver = class ResizeObserver extends _ResizeObserver {\n  constructor(callback) {\n    callback = debounce(callback, 200);\n    super(callback);\n  }\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,sCAAsC;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAGzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,uBAAuB,CAAC,CAAC;AAClDF,KAAK,CAACC,QAAQ,CAACE,eAAe,GAAG,IAAI,CAAC,CAAC;;AAEvC;AACAH,KAAK,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACzC,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC;EAC/D,IAAIJ,SAAS,EAAE;IACbD,MAAM,CAACM,OAAO,CAACC,aAAa,GAAG,UAAUN,SAAS,CAACO,KAAK,IAAI,EAAE,EAAE;EAClE;EACA,OAAOR,MAAM;AACf,CAAC,CAAC;AAEFX,GAAG,CAACW,MAAM,CAACS,aAAa,GAAG,KAAK;AAChCpB,GAAG,CAACU,GAAG,CAACP,SAAS,CAAC;AAClB,IAAIH,GAAG,CAAC;EACNE,MAAM;EACNmB,MAAM,EAAEC,CAAC,IAAIA,CAAC,CAACrB,GAAG;AACpB,CAAC,CAAC,CAACsB,MAAM,CAAC,MAAM,CAAC;;AAEjB;AACA,MAAMC,QAAQ,GAAGA,CAACC,EAAE,EAAEC,KAAK,KAAK;EAC9B,IAAIC,KAAK;EACT,OAAO,CAAC,GAAGC,IAAI,KAAK;IAClB,IAAID,KAAK,EAAE;MACTE,YAAY,CAACF,KAAK,CAAC;IACrB;IACAA,KAAK,GAAGG,UAAU,CAAC,MAAM;MACvBL,EAAE,CAAC,GAAGG,IAAI,CAAC;IACb,CAAC,EAAEF,KAAK,CAAC;EACX,CAAC;AACH,CAAC;AAED,MAAMK,eAAe,GAAGC,MAAM,CAACC,cAAc;AAC7CD,MAAM,CAACC,cAAc,GAAG,MAAMA,cAAc,SAASF,eAAe,CAAC;EACnEG,WAAWA,CAACC,QAAQ,EAAE;IACpBA,QAAQ,GAAGX,QAAQ,CAACW,QAAQ,EAAE,GAAG,CAAC;IAClC,KAAK,CAACA,QAAQ,CAAC;EACjB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}