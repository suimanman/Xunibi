{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      newTeam: {\n        name: ''\n      },\n      selectedTeam: {\n        id: '',\n        name: ''\n      },\n      teams: [],\n      createMessage: '',\n      updateMessage: '',\n      singleTeamMessage: ''\n    };\n  },\n  methods: {\n    async createTeam() {\n      try {\n        const response = await axios.post('http://localhost:8080/team/create', this.newTeam);\n        this.createMessage = \"团队创建成功！\";\n        this.fetchAllTeams();\n      } catch (error) {\n        this.createMessage = error.response?.data || \"创建失败\";\n      }\n    },\n    async fetchAllTeams() {\n      try {\n        const response = await axios.get('http://localhost:8080/team/list');\n        this.teams = response.data;\n      } catch (error) {\n        console.error(\"获取团队列表失败\", error);\n      }\n    },\n    async fetchTeamById(id) {\n      try {\n        const response = await axios.get(`http://localhost:8080/team/${id}`);\n        this.selectedTeam = response.data;\n        this.singleTeamMessage = \"团队信息获取成功\";\n      } catch (error) {\n        this.singleTeamMessage = error.response?.data || \"团队获取失败\";\n      }\n    },\n    async updateTeam() {\n      try {\n        await axios.put(`http://localhost:8080/team/update/${this.selectedTeam.id}`, {\n          name: this.selectedTeam.name\n        });\n        this.updateMessage = \"团队信息更新成功\";\n        this.fetchAllTeams();\n      } catch (error) {\n        this.updateMessage = error.response?.data || \"更新失败\";\n      }\n    },\n    async deleteTeam(id) {\n      try {\n        await axios.delete(`http://localhost:8080/team/delete/${id}`);\n        this.fetchAllTeams();\n      } catch (error) {\n        console.error(\"删除失败\", error);\n      }\n    }\n  },\n  mounted() {\n    this.fetchAllTeams();\n  }\n};","map":{"version":3,"names":["axios","data","newTeam","name","selectedTeam","id","teams","createMessage","updateMessage","singleTeamMessage","methods","createTeam","response","post","fetchAllTeams","error","get","console","fetchTeamById","updateTeam","put","deleteTeam","delete","mounted"],"sources":["src/views/manage/AdminView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <h2>团队管理系统</h2>\n\n        <h3>创建新团队</h3>\n        <form @submit.prevent=\"createTeam\">\n            <label>团队名称:</label>\n            <input v-model=\"newTeam.name\" placeholder=\"请输入团队名称\" required />\n            <button type=\"submit\">创建团队</button>\n            <p>{{ createMessage }}</p>\n        </form>\n\n        <h3>所有团队列表</h3>\n        <button @click=\"fetchAllTeams\">刷新团队列表</button>\n        <ul>\n            <li v-for=\"team in teams\" :key=\"team.id\">\n                <p><strong>ID:</strong> {{ team.id }} <strong>名称:</strong> {{ team.name }}</p>\n                <button @click=\"fetchTeamById(team.id)\">查看</button>\n                <button @click=\"deleteTeam(team.id)\">删除</button>\n            </li>\n        </ul>\n\n        <h3>单个团队信息</h3>\n        <form @submit.prevent=\"updateTeam\">\n            <label>团队ID:</label>\n            <input v-model=\"selectedTeam.id\" placeholder=\"请输入团队ID\" required />\n            <button @click=\"fetchTeamById(selectedTeam.id)\">获取团队信息</button>\n            <div v-if=\"selectedTeam.name\">\n                <label>团队名称:</label>\n                <input v-model=\"selectedTeam.name\" />\n                <button type=\"submit\">更新团队信息</button>\n                <p>{{ updateMessage }}</p>\n            </div>\n        </form>\n        <p>{{ singleTeamMessage }}</p>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            newTeam: { name: '' },\n            selectedTeam: { id: '', name: '' },\n            teams: [],\n            createMessage: '',\n            updateMessage: '',\n            singleTeamMessage: ''\n        };\n    },\n    methods: {\n        async createTeam() {\n            try {\n                const response = await axios.post('http://localhost:8080/team/create', this.newTeam);\n                this.createMessage = \"团队创建成功！\";\n                this.fetchAllTeams();\n            } catch (error) {\n                this.createMessage = error.response?.data || \"创建失败\";\n            }\n        },\n        async fetchAllTeams() {\n            try {\n                const response = await axios.get('http://localhost:8080/team/list');\n                this.teams = response.data;\n            } catch (error) {\n                console.error(\"获取团队列表失败\", error);\n            }\n        },\n        async fetchTeamById(id) {\n            try {\n                const response = await axios.get(`http://localhost:8080/team/${id}`);\n                this.selectedTeam = response.data;\n                this.singleTeamMessage = \"团队信息获取成功\";\n            } catch (error) {\n                this.singleTeamMessage = error.response?.data || \"团队获取失败\";\n            }\n        },\n        async updateTeam() {\n            try {\n                await axios.put(`http://localhost:8080/team/update/${this.selectedTeam.id}`, { name: this.selectedTeam.name });\n                this.updateMessage = \"团队信息更新成功\";\n                this.fetchAllTeams();\n            } catch (error) {\n                this.updateMessage = error.response?.data || \"更新失败\";\n            }\n        },\n        async deleteTeam(id) {\n            try {\n                await axios.delete(`http://localhost:8080/team/delete/${id}`);\n                this.fetchAllTeams();\n            } catch (error) {\n                console.error(\"删除失败\", error);\n            }\n        }\n    },\n    mounted() {\n        this.fetchAllTeams();\n    }\n};\n</script>\n\n<style scoped>\n.container {\n    max-width: 600px;\n    margin: 0 auto;\n    padding: 20px;\n    font-family: Arial, sans-serif;\n    background-color: #f5f5f5;\n    border-radius: 8px;\n    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n    color: #333;\n    text-align: center;\n}\n\nh3 {\n    color: #555;\n}\n\nform {\n    margin-bottom: 20px;\n}\n\nlabel {\n    display: block;\n    margin: 10px 0 5px;\n}\n\ninput {\n    width: 100%;\n    padding: 8px;\n    margin-bottom: 10px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n}\n\nbutton {\n    padding: 10px 15px;\n    background-color: #4CAF50;\n    color: #fff;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\nbutton:hover {\n    background-color: #45a049;\n}\n\nul {\n    list-style: none;\n    padding: 0;\n}\n\nli {\n    margin: 15px 0;\n    padding: 10px;\n    background-color: #fff;\n    border-radius: 4px;\n    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n}\n\np {\n    color: #333;\n}\n</style>"],"mappings":"AAuCA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,OAAA;QAAAC,IAAA;MAAA;MACAC,YAAA;QAAAC,EAAA;QAAAF,IAAA;MAAA;MACAG,KAAA;MACAC,aAAA;MACAC,aAAA;MACAC,iBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,WAAA;MACA;QACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,IAAA,2CAAAX,OAAA;QACA,KAAAK,aAAA;QACA,KAAAO,aAAA;MACA,SAAAC,KAAA;QACA,KAAAR,aAAA,GAAAQ,KAAA,CAAAH,QAAA,EAAAX,IAAA;MACA;IACA;IACA,MAAAa,cAAA;MACA;QACA,MAAAF,QAAA,SAAAZ,KAAA,CAAAgB,GAAA;QACA,KAAAV,KAAA,GAAAM,QAAA,CAAAX,IAAA;MACA,SAAAc,KAAA;QACAE,OAAA,CAAAF,KAAA,aAAAA,KAAA;MACA;IACA;IACA,MAAAG,cAAAb,EAAA;MACA;QACA,MAAAO,QAAA,SAAAZ,KAAA,CAAAgB,GAAA,+BAAAX,EAAA;QACA,KAAAD,YAAA,GAAAQ,QAAA,CAAAX,IAAA;QACA,KAAAQ,iBAAA;MACA,SAAAM,KAAA;QACA,KAAAN,iBAAA,GAAAM,KAAA,CAAAH,QAAA,EAAAX,IAAA;MACA;IACA;IACA,MAAAkB,WAAA;MACA;QACA,MAAAnB,KAAA,CAAAoB,GAAA,2CAAAhB,YAAA,CAAAC,EAAA;UAAAF,IAAA,OAAAC,YAAA,CAAAD;QAAA;QACA,KAAAK,aAAA;QACA,KAAAM,aAAA;MACA,SAAAC,KAAA;QACA,KAAAP,aAAA,GAAAO,KAAA,CAAAH,QAAA,EAAAX,IAAA;MACA;IACA;IACA,MAAAoB,WAAAhB,EAAA;MACA;QACA,MAAAL,KAAA,CAAAsB,MAAA,sCAAAjB,EAAA;QACA,KAAAS,aAAA;MACA,SAAAC,KAAA;QACAE,OAAA,CAAAF,KAAA,SAAAA,KAAA;MACA;IACA;EACA;EACAQ,QAAA;IACA,KAAAT,aAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}