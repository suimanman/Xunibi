{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"AdminLogin\",\n  data() {\n    return {\n      loading: false,\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }, {\n          min: 3,\n          max: 20,\n          message: \"账号长度在 3 到 20 个字符之间\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }, {\n          min: 6,\n          message: \"密码长度至少为 6 个字符\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    async handleLogin() {\n      this.$refs.loginFormRef.validate(async valid => {\n        if (valid) {\n          this.loading = true;\n          try {\n            const response = await axios.post(\"http://localhost:8080/admins/login\", this.loginForm);\n            const adminData = response.data;\n            if (adminData) {\n              // 假设需要将登录状态保存在 LocalStorage\n              localStorage.setItem(\"adminData\", JSON.stringify(adminData));\n              this.$message.success(\"登录成功！\");\n              this.$router.push(\"/\"); // 跳转到管理员控制台页面\n            }\n          } catch (error) {\n            console.error(error);\n            this.$message.error(error.response?.data?.message || \"登录失败，请重试\");\n          } finally {\n            this.loading = false;\n          }\n        } else {\n          this.$message.warning(\"请填写完整的登录信息\");\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","loading","loginForm","username","password","loginRules","required","message","trigger","min","max","methods","handleLogin","$refs","loginFormRef","validate","valid","response","post","adminData","localStorage","setItem","JSON","stringify","$message","success","$router","push","error","console","warning"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<style scoped>\n.login-body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f5f7fa;\n}\n\n.login-container {\n    width: 400px;\n}\n\n.login-card {\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.card-header {\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    color: #333;\n}\n\n.login-form {\n    margin-top: 20px;\n}\n\n.register-link {\n    color: #409eff;\n    cursor: pointer;\n    text-decoration: underline;\n}\n\n.register-link:hover {\n    color: #66b1ff;\n}\n</style>\n\n<template>\n    <div class=\"login-body\">\n        <div class=\"login-container\">\n            <el-card class=\"login-card\" shadow=\"hover\">\n                <template #header>\n                    <div class=\"card-header\">管理员登录</div>\n                </template>\n                <div class=\"login-form\">\n                    <!-- 确保 el-form 的 model 正确绑定 -->\n                    <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginRules\" label-width=\"100px\">\n                        <el-form-item label=\"账号：\" prop=\"username\">\n                            <el-input type=\"text\" v-model=\"loginForm.username\" placeholder=\"请输入账号\" clearable />\n                        </el-form-item>\n                        <el-form-item label=\"密码：\" prop=\"password\">\n                            <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" show-password />\n                        </el-form-item>\n                        <el-form-item>\n                            <el-button type=\"primary\" :loading=\"loading\" @click=\"handleLogin\">\n                                登录\n                            </el-button>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </el-card>\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n    name: \"AdminLogin\",\n    data() {\n        return {\n            loading: false,\n            loginForm: {\n                username: \"\",\n                password: \"\",\n            },\n            loginRules: {\n                username: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                    { min: 3, max: 20, message: \"账号长度在 3 到 20 个字符之间\", trigger: \"blur\" },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                    { min: 6, message: \"密码长度至少为 6 个字符\", trigger: \"blur\" },\n                ],\n            },\n        };\n    },\n    methods: {\n        async handleLogin() {\n            this.$refs.loginFormRef.validate(async (valid) => {\n                if (valid) {\n                    this.loading = true;\n                    try {\n                        const response = await axios.post(\"http://localhost:8080/admins/login\", this.loginForm);\n                        const adminData = response.data;\n                        if (adminData) {\n                            // 假设需要将登录状态保存在 LocalStorage\n                            localStorage.setItem(\"adminData\", JSON.stringify(adminData));\n                            this.$message.success(\"登录成功！\");\n                            this.$router.push(\"/\"); // 跳转到管理员控制台页面\n                        }\n                    } catch (error) {\n                        console.error(error);\n                        this.$message.error(error.response?.data?.message || \"登录失败，请重试\");\n                    } finally {\n                        this.loading = false;\n                    }\n                } else {\n                    this.$message.warning(\"请填写完整的登录信息\");\n                }\n            });\n        },\n    },\n};\n</script>\n"],"mappings":";AAsEA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAC,GAAA;UAAAH,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAC,GAAA;UAAAF,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAG,OAAA;IACA,MAAAC,YAAA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,OAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAf,OAAA;UACA;YACA,MAAAgB,QAAA,SAAAnB,KAAA,CAAAoB,IAAA,4CAAAhB,SAAA;YACA,MAAAiB,SAAA,GAAAF,QAAA,CAAAjB,IAAA;YACA,IAAAmB,SAAA;cACA;cACAC,YAAA,CAAAC,OAAA,cAAAC,IAAA,CAAAC,SAAA,CAAAJ,SAAA;cACA,KAAAK,QAAA,CAAAC,OAAA;cACA,KAAAC,OAAA,CAAAC,IAAA;YACA;UACA,SAAAC,KAAA;YACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;YACA,KAAAJ,QAAA,CAAAI,KAAA,CAAAA,KAAA,CAAAX,QAAA,EAAAjB,IAAA,EAAAO,OAAA;UACA;YACA,KAAAN,OAAA;UACA;QACA;UACA,KAAAuB,QAAA,CAAAM,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}