{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Message } from \"element-ui\";\nexport default {\n  name: \"LoginView\",\n  data() {\n    return {\n      loginForm: {\n        username: \"\",\n        password: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          message: \"请输入账号\",\n          trigger: \"blur\"\n        }],\n        password: [{\n          required: true,\n          message: \"请输入密码\",\n          trigger: \"blur\"\n        }]\n      },\n      loading: false,\n      // 登录加载状态\n      // 模拟用户数据\n      fakeUserData: {\n        username: \"admin\",\n        password: \"123456\"\n      }\n    };\n  },\n  methods: {\n    handleLogin() {\n      // 调用表单验证\n      this.$refs.loginFormRef.validate(valid => {\n        if (!valid) {\n          // 表单验证未通过\n          return Message.error(\"请输入账号和密码！\");\n        }\n\n        // 开启加载状态\n        this.loading = true;\n        setTimeout(() => {\n          // 模拟登录逻辑\n          if (this.loginForm.username === this.fakeUserData.username && this.loginForm.password === this.fakeUserData.password) {\n            Message.success(\"登录成功！\");\n            this.$router.push({\n              path: \"/\"\n            }); // 跳转到首页\n          } else {\n            Message.error(\"用户名或密码错误，请重试！\");\n          }\n\n          // 关闭加载状态\n          this.loading = false;\n        }, 1000);\n      });\n    }\n  }\n};","map":{"version":3,"names":["Message","name","data","loginForm","username","password","loginRules","required","message","trigger","loading","fakeUserData","methods","handleLogin","$refs","loginFormRef","validate","valid","error","setTimeout","success","$router","push","path"],"sources":["src/views/LoginView.vue"],"sourcesContent":["<template>\n    <div class=\"login-body\">\n        <div class=\"login-container\">\n            <el-card class=\"login-card\" shadow=\"hover\">\n                <template #header>\n                    <div class=\"card-header\">管理员登录</div>\n                </template>\n                <div class=\"login-form\">\n                    <el-form ref=\"loginFormRef\" v-model=\"loginForm\" :rules=\"loginRules\" label-width=\"100px\">\n                        <el-form-item label=\"账号：\" prop=\"username\">\n                            <el-input type=\"text\" v-model=\"loginForm.username\" placeholder=\"请输入账号\" clearable />\n                        </el-form-item>\n                        <el-form-item label=\"密码：\" prop=\"password\">\n                            <el-input type=\"password\" v-model=\"loginForm.password\" placeholder=\"请输入密码\" show-password />\n                        </el-form-item>\n                        <el-form-item>\n                            <el-row type=\"flex\" justify=\"space-between\" align=\"middle\">\n                                <el-col>\n                                    <el-button type=\"primary\" :loading=\"loading\" @click=\"handleLogin\">\n                                        登录\n                                    </el-button>\n                                </el-col>\n                                <!-- <el-col>\n                                    <span class=\"register-link\" @click=\"toRegister\">\n                                        还没有账号? 点击注册\n                                    </span>\n                                </el-col> -->\n                            </el-row>\n                        </el-form-item>\n                    </el-form>\n                </div>\n            </el-card>\n        </div>\n    </div>\n</template>\n<style scoped>\n.login-body {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    background-color: #f5f7fa;\n}\n\n.login-container {\n    width: 400px;\n}\n\n.login-card {\n    padding: 20px;\n    border-radius: 10px;\n}\n\n.card-header {\n    text-align: center;\n    font-size: 20px;\n    font-weight: bold;\n    color: #333;\n}\n\n.login-form {\n    margin-top: 20px;\n}\n\n.register-link {\n    color: #409eff;\n    cursor: pointer;\n    text-decoration: underline;\n}\n\n.register-link:hover {\n    color: #66b1ff;\n}\n</style>\n\n<script>\nimport { Message } from \"element-ui\";\n\nexport default {\n    name: \"LoginView\",\n    data() {\n        return {\n            loginForm: {\n                username: \"\",\n                password: \"\",\n            },\n            loginRules: {\n                username: [\n                    { required: true, message: \"请输入账号\", trigger: \"blur\" },\n                ],\n                password: [\n                    { required: true, message: \"请输入密码\", trigger: \"blur\" },\n                ],\n            },\n            loading: false, // 登录加载状态\n            // 模拟用户数据\n            fakeUserData: {\n                username: \"admin\",\n                password: \"123456\",\n            },\n        };\n    },\n    methods: {\n        handleLogin() {\n            // 调用表单验证\n            this.$refs.loginFormRef.validate((valid) => {\n                if (!valid) {\n                    // 表单验证未通过\n                    return Message.error(\"请输入账号和密码！\");\n                }\n\n                // 开启加载状态\n                this.loading = true;\n\n                setTimeout(() => {\n                    // 模拟登录逻辑\n                    if (\n                        this.loginForm.username === this.fakeUserData.username &&\n                        this.loginForm.password === this.fakeUserData.password\n                    ) {\n                        Message.success(\"登录成功！\");\n                        this.$router.push({ path: \"/\" }); // 跳转到首页\n                    } else {\n                        Message.error(\"用户名或密码错误，请重试！\");\n                    }\n\n                    // 关闭加载状态\n                    this.loading = false;\n                }, 1000);\n            });\n        },\n    },\n};\n</script>\n"],"mappings":";AA4EA,SAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,QAAA;QACAC,QAAA;MACA;MACAC,UAAA;QACAF,QAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,OAAA;MAAA;MACA;MACAC,YAAA;QACAP,QAAA;QACAC,QAAA;MACA;IACA;EACA;EACAO,OAAA;IACAC,YAAA;MACA;MACA,KAAAC,KAAA,CAAAC,YAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,KAAAA,KAAA;UACA;UACA,OAAAjB,OAAA,CAAAkB,KAAA;QACA;;QAEA;QACA,KAAAR,OAAA;QAEAS,UAAA;UACA;UACA,IACA,KAAAhB,SAAA,CAAAC,QAAA,UAAAO,YAAA,CAAAP,QAAA,IACA,KAAAD,SAAA,CAAAE,QAAA,UAAAM,YAAA,CAAAN,QAAA,EACA;YACAL,OAAA,CAAAoB,OAAA;YACA,KAAAC,OAAA,CAAAC,IAAA;cAAAC,IAAA;YAAA;UACA;YACAvB,OAAA,CAAAkB,KAAA;UACA;;UAEA;UACA,KAAAR,OAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}