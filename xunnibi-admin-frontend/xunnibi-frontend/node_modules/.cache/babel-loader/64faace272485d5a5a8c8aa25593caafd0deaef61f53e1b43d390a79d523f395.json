{"ast":null,"code":"import \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      searchQuery: null,\n      // 搜索关键字\n      tableData: [],\n      // 原始数据\n      displayedData: [],\n      // 当前页显示的数据\n      currentPage: 1,\n      // 当前页码\n      pageSize: 10,\n      // 每页显示条数\n      total: 0 // 数据总条数\n    };\n  },\n  mounted() {\n    this.getAchievementList(); // 加载数据\n  },\n  methods: {\n    // 获取数据\n    async getAchievementList() {\n      try {\n        const [achievementListResponse, teamListResponse] = await Promise.all([axios.get(\"http://localhost:8080/records/virtualCoinRecords\"), axios.get(\"http://localhost:8080/team/list\")]);\n        if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n          const achievementList = achievementListResponse.data.data.map(item => {\n            const team = teamListResponse.data.find(t => t.teamId === item.teamId);\n            return {\n              ...item,\n              teamName: team ? team.teamName : \"未知\"\n            };\n          });\n          this.tableData = achievementList;\n          this.total = achievementList.length; // 设置总条目数\n          this.updateDisplayedData(); // 计算当前页数据\n        }\n      } catch (error) {\n        console.error(\"获取数据失败:\", error);\n        this.$message.error(\"获取数据失败，请稍后重试\");\n      }\n    },\n    // 更新显示的数据\n    updateDisplayedData() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      this.displayedData = this.tableData.slice(start, end);\n    },\n    // 处理页码变化\n    handlePageChange(newPage) {\n      this.currentPage = newPage;\n      this.updateDisplayedData();\n    },\n    // 处理每页条数变化\n    handlePageSizeChange(newSize) {\n      this.pageSize = newSize;\n      this.currentPage = 1; // 重置到第一页\n      this.updateDisplayedData();\n    },\n    // 查询功能\n    search() {\n      if (!this.searchQuery) {\n        this.$message.warning(\"请输入团队名称查询\");\n        return;\n      }\n      const filteredData = this.tableData.filter(item => item.teamName.toLowerCase().includes(this.searchQuery.toLowerCase()));\n      this.total = filteredData.length; // 更新总条目数\n      this.currentPage = 1; // 重置页码\n      this.tableData = filteredData;\n      this.updateDisplayedData(); // 更新显示数据\n    },\n    // 重置查询\n    reset() {\n      this.searchQuery = null; // 清空搜索关键字\n      this.getAchievementList(); // 重新加载数据\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","tableData","displayedData","currentPage","pageSize","total","mounted","getAchievementList","methods","achievementListResponse","teamListResponse","Promise","all","get","code","status","achievementList","map","item","team","find","t","teamId","teamName","length","updateDisplayedData","error","console","$message","start","end","slice","handlePageChange","newPage","handlePageSizeChange","newSize","search","warning","filteredData","filter","toLowerCase","includes","reset"],"sources":["src/views/manage/TradeRecordsView.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"header\">\n      <el-input v-model=\"searchQuery\" placeholder=\"请输入团队名称\" style=\"width: 250px\"></el-input>\n      <el-button type=\"info\" plain @click=\"search\" icon=\"el-icon-zoom-in\">查询</el-button>\n      <el-button type=\"warning\" plain @click=\"reset\" icon=\"el-icon-refresh-left\">重置</el-button>\n    </div>\n\n    <div class=\"table-wrapper\">\n      <el-table ref=\"filterTable\" :data=\"displayedData\" style=\"width: 100%\" border>\n        <el-table-column prop=\"transactionId\" label=\"id\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"transactionDate\" label=\"交易日期\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"transactionType\" label=\"交易类型\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"teamName\" label=\"团队名称\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"coinAmount\" label=\"交易虚拟币数量\" align=\"center\"></el-table-column>\n        <el-table-column prop=\"description\" label=\"交易内容\" align=\"center\"></el-table-column>\n      </el-table>\n\n      <el-pagination background layout=\"prev, pager, next, sizes, total\" :current-page=\"currentPage\"\n                     :page-size=\"pageSize\" :total=\"total\" @current-change=\"handlePageChange\"\n                     @size-change=\"handlePageSizeChange\"></el-pagination>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      searchQuery: null, // 搜索关键字\n      tableData: [], // 原始数据\n      displayedData: [], // 当前页显示的数据\n      currentPage: 1, // 当前页码\n      pageSize: 10, // 每页显示条数\n      total: 0, // 数据总条数\n    };\n  },\n  mounted() {\n    this.getAchievementList(); // 加载数据\n  },\n  methods: {\n    // 获取数据\n    async getAchievementList() {\n      try {\n        const [achievementListResponse, teamListResponse] = await Promise.all([\n          axios.get(\"http://localhost:8080/records/virtualCoinRecords\"),\n          axios.get(\"http://localhost:8080/team/list\"),\n        ]);\n        if (achievementListResponse.data.code === 200 && teamListResponse.status === 200) {\n          const achievementList = achievementListResponse.data.data.map((item) => {\n            const team = teamListResponse.data.find((t) => t.teamId === item.teamId);\n            return {\n              ...item,\n              teamName: team ? team.teamName : \"未知\",\n            };\n          });\n          this.tableData = achievementList;\n          this.total = achievementList.length; // 设置总条目数\n          this.updateDisplayedData(); // 计算当前页数据\n        }\n      } catch (error) {\n        console.error(\"获取数据失败:\", error);\n        this.$message.error(\"获取数据失败，请稍后重试\");\n      }\n    },\n\n    // 更新显示的数据\n    updateDisplayedData() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      this.displayedData = this.tableData.slice(start, end);\n    },\n\n    // 处理页码变化\n    handlePageChange(newPage) {\n      this.currentPage = newPage;\n      this.updateDisplayedData();\n    },\n\n    // 处理每页条数变化\n    handlePageSizeChange(newSize) {\n      this.pageSize = newSize;\n      this.currentPage = 1; // 重置到第一页\n      this.updateDisplayedData();\n    },\n\n    // 查询功能\n    search() {\n      if (!this.searchQuery) {\n        this.$message.warning(\"请输入团队名称查询\");\n        return;\n      }\n      const filteredData = this.tableData.filter(item =>\n          item.teamName.toLowerCase().includes(this.searchQuery.toLowerCase())\n      );\n      this.total = filteredData.length; // 更新总条目数\n      this.currentPage = 1; // 重置页码\n      this.tableData = filteredData;\n      this.updateDisplayedData(); // 更新显示数据\n    },\n\n    // 重置查询\n    reset() {\n      this.searchQuery = null; // 清空搜索关键字\n      this.getAchievementList(); // 重新加载数据\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  background-color: #f9f9f9;\n}\n\n.header {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.header .el-input {\n  max-width: 300px;\n}\n\n.table-wrapper {\n  border: 1px solid #e0e0e0;\n  border-radius: 5px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  padding: 10px;\n}\n</style>"],"mappings":";;;;AA0BA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,SAAA;MAAA;MACAC,aAAA;MAAA;MACAC,WAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAD,mBAAA;MACA;QACA,OAAAE,uBAAA,EAAAC,gBAAA,UAAAC,OAAA,CAAAC,GAAA,EACAd,KAAA,CAAAe,GAAA,sDACAf,KAAA,CAAAe,GAAA,oCACA;QACA,IAAAJ,uBAAA,CAAAV,IAAA,CAAAe,IAAA,YAAAJ,gBAAA,CAAAK,MAAA;UACA,MAAAC,eAAA,GAAAP,uBAAA,CAAAV,IAAA,CAAAA,IAAA,CAAAkB,GAAA,CAAAC,IAAA;YACA,MAAAC,IAAA,GAAAT,gBAAA,CAAAX,IAAA,CAAAqB,IAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,MAAA,KAAAJ,IAAA,CAAAI,MAAA;YACA;cACA,GAAAJ,IAAA;cACAK,QAAA,EAAAJ,IAAA,GAAAA,IAAA,CAAAI,QAAA;YACA;UACA;UACA,KAAAtB,SAAA,GAAAe,eAAA;UACA,KAAAX,KAAA,GAAAW,eAAA,CAAAQ,MAAA;UACA,KAAAC,mBAAA;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,YAAAA,KAAA;QACA,KAAAE,QAAA,CAAAF,KAAA;MACA;IACA;IAEA;IACAD,oBAAA;MACA,MAAAI,KAAA,SAAA1B,WAAA,aAAAC,QAAA;MACA,MAAA0B,GAAA,GAAAD,KAAA,QAAAzB,QAAA;MACA,KAAAF,aAAA,QAAAD,SAAA,CAAA8B,KAAA,CAAAF,KAAA,EAAAC,GAAA;IACA;IAEA;IACAE,iBAAAC,OAAA;MACA,KAAA9B,WAAA,GAAA8B,OAAA;MACA,KAAAR,mBAAA;IACA;IAEA;IACAS,qBAAAC,OAAA;MACA,KAAA/B,QAAA,GAAA+B,OAAA;MACA,KAAAhC,WAAA;MACA,KAAAsB,mBAAA;IACA;IAEA;IACAW,OAAA;MACA,UAAApC,WAAA;QACA,KAAA4B,QAAA,CAAAS,OAAA;QACA;MACA;MACA,MAAAC,YAAA,QAAArC,SAAA,CAAAsC,MAAA,CAAArB,IAAA,IACAA,IAAA,CAAAK,QAAA,CAAAiB,WAAA,GAAAC,QAAA,MAAAzC,WAAA,CAAAwC,WAAA,GACA;MACA,KAAAnC,KAAA,GAAAiC,YAAA,CAAAd,MAAA;MACA,KAAArB,WAAA;MACA,KAAAF,SAAA,GAAAqC,YAAA;MACA,KAAAb,mBAAA;IACA;IAEA;IACAiB,MAAA;MACA,KAAA1C,WAAA;MACA,KAAAO,kBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}