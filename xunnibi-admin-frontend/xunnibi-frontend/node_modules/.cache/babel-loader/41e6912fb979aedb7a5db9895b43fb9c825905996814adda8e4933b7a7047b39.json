{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      // 搜索关键词\n      teams: [],\n      // 团队数据列表\n      selectedTeams: [] // 选中的团队数据\n    };\n  },\n  created() {\n    this.load(); // 页面加载时获取数据\n  },\n  methods: {\n    async load() {\n      try {\n        const response = await axios.get('http://localhost:8080/team/list');\n        if (response.status === 200 && Array.isArray(response.data)) {\n          console.log(\"团队列表数据:\", response.data);\n          this.teams = response.data; // 确保返回的是数组\n        } else {\n          console.error(\"服务器返回的响应不是数组\", response);\n        }\n      } catch (error) {\n        if (error.response) {\n          console.error(\"服务器错误:\", error.response.data);\n        } else if (error.request) {\n          console.error(\"没有收到响应:\", error.request);\n        } else {\n          console.error(\"请求错误:\", error.message);\n        }\n      }\n    },\n    search() {\n      // 在点击“查询”按钮后调用的方法\n      try {\n        axios.get(`http://localhost:8080/team/${this.searchQuery}`).then(response => {\n          this.teams = [response.data];\n        }).catch(error => {\n          this.$message.error(\"查询失败\");\n        });\n      } catch (error) {\n        console.error(\"查询过程中出现异常\", error);\n      }\n    },\n    reset() {\n      // 重置搜索条件并重新加载数据\n      this.searchQuery = '';\n      this.load();\n    },\n    handleAdd() {\n      console.log(\"新增团队\");\n    },\n    delBatch() {\n      console.log(\"批量删除:\", this.selectedTeams);\n      this.selectedTeams.forEach(team => {\n        this.del(team.teamId);\n      });\n    },\n    async del(teamId) {\n      try {\n        await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n        this.load(); // 删除后重新加载数据\n      } catch (error) {\n        console.error(\"删除失败:\", error);\n      }\n    },\n    handleEdit(row) {\n      console.log(\"编辑团队:\", row);\n    },\n    handleSelectionChange(val) {\n      this.selectedTeams = val; // 更新选中的团队列表\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","teams","selectedTeams","created","load","methods","response","get","status","Array","isArray","console","log","error","request","message","search","then","catch","$message","reset","handleAdd","delBatch","forEach","team","del","teamId","delete","handleEdit","row","handleSelectionChange","val"],"sources":["src/views/manage/TeamView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"search\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入团队id查询\" style=\"width: 200px\"></el-input>\n            <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"search\">查询</el-button>\n            <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\n            <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>\n            <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\n        </div>\n\n        <div class=\"table\">\n            <el-table :data=\"teams\" @selection-change=\"handleSelectionChange\" style=\"width: 100%\">\n                <el-table-column prop=\"teamId\" label=\"团队ID\" sortable></el-table-column>\n                <el-table-column prop=\"teamName\" label=\"团队名称\"></el-table-column>\n                <el-table-column prop=\"virtualCoins\" label=\"虚拟币数量\"></el-table-column>\n                <el-table-column prop=\"creationDate\" label=\"入住日期\"></el-table-column>\n\n                <el-table-column label=\"操作\">\n                    <template v-slot=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.teamId)\">删除</el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n        return {\n            searchQuery: '', // 搜索关键词\n            teams: [], // 团队数据列表\n            selectedTeams: [], // 选中的团队数据\n        };\n    },\n    created() {\n        this.load(); // 页面加载时获取数据\n    },\n    methods: {\n        async load() {\n            try {\n                const response = await axios.get('http://localhost:8080/team/list');\n                if (response.status === 200 && Array.isArray(response.data)) {\n                    console.log(\"团队列表数据:\", response.data);\n                    this.teams = response.data; // 确保返回的是数组\n                } else {\n                    console.error(\"服务器返回的响应不是数组\", response);\n                }\n            } catch (error) {\n                if (error.response) {\n                    console.error(\"服务器错误:\", error.response.data);\n                } else if (error.request) {\n                    console.error(\"没有收到响应:\", error.request);\n                } else {\n                    console.error(\"请求错误:\", error.message);\n                }\n            }\n        },\n        search() {\n            // 在点击“查询”按钮后调用的方法\n            try {\n                axios.get(`http://localhost:8080/team/${this.searchQuery}`).then(\n                    response => {\n                        this.teams = [response.data];\n                    }\n                ).catch(error => {\n                    this.$message.error(\"查询失败\");\n                });\n            } catch (error) {\n                console.error(\"查询过程中出现异常\", error);\n            }\n        },\n        reset() {\n            // 重置搜索条件并重新加载数据\n            this.searchQuery = '';\n            this.load();\n        },\n        handleAdd() {\n            console.log(\"新增团队\");\n        },\n        delBatch() {\n            console.log(\"批量删除:\", this.selectedTeams);\n            this.selectedTeams.forEach(team => {\n                this.del(team.teamId);\n            });\n        },\n        async del(teamId) {\n            try {\n                await axios.delete(`http://localhost:8080/team/delete/${teamId}`);\n                this.load(); // 删除后重新加载数据\n            } catch (error) {\n                console.error(\"删除失败:\", error);\n            }\n        },\n        handleEdit(row) {\n            console.log(\"编辑团队:\", row);\n        },\n        handleSelectionChange(val) {\n            this.selectedTeams = val; // 更新选中的团队列表\n        }\n    }\n};\n</script>\n\n<style scoped>\n.search {\n    display: flex;\n    align-items: center;\n    margin-bottom: 15px;\n}\n\n.table {\n    border: 1px solid #ccc;\n    padding: 20px;\n}\n</style>\n"],"mappings":"AA6BA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,KAAA;MAAA;MACAC,aAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,IAAA;EACA;EACAC,OAAA;IACA,MAAAD,KAAA;MACA;QACA,MAAAE,QAAA,SAAAR,KAAA,CAAAS,GAAA;QACA,IAAAD,QAAA,CAAAE,MAAA,YAAAC,KAAA,CAAAC,OAAA,CAAAJ,QAAA,CAAAP,IAAA;UACAY,OAAA,CAAAC,GAAA,YAAAN,QAAA,CAAAP,IAAA;UACA,KAAAE,KAAA,GAAAK,QAAA,CAAAP,IAAA;QACA;UACAY,OAAA,CAAAE,KAAA,iBAAAP,QAAA;QACA;MACA,SAAAO,KAAA;QACA,IAAAA,KAAA,CAAAP,QAAA;UACAK,OAAA,CAAAE,KAAA,WAAAA,KAAA,CAAAP,QAAA,CAAAP,IAAA;QACA,WAAAc,KAAA,CAAAC,OAAA;UACAH,OAAA,CAAAE,KAAA,YAAAA,KAAA,CAAAC,OAAA;QACA;UACAH,OAAA,CAAAE,KAAA,UAAAA,KAAA,CAAAE,OAAA;QACA;MACA;IACA;IACAC,OAAA;MACA;MACA;QACAlB,KAAA,CAAAS,GAAA,oCAAAP,WAAA,IAAAiB,IAAA,CACAX,QAAA;UACA,KAAAL,KAAA,IAAAK,QAAA,CAAAP,IAAA;QACA,CACA,EAAAmB,KAAA,CAAAL,KAAA;UACA,KAAAM,QAAA,CAAAN,KAAA;QACA;MACA,SAAAA,KAAA;QACAF,OAAA,CAAAE,KAAA,cAAAA,KAAA;MACA;IACA;IACAO,MAAA;MACA;MACA,KAAApB,WAAA;MACA,KAAAI,IAAA;IACA;IACAiB,UAAA;MACAV,OAAA,CAAAC,GAAA;IACA;IACAU,SAAA;MACAX,OAAA,CAAAC,GAAA,eAAAV,aAAA;MACA,KAAAA,aAAA,CAAAqB,OAAA,CAAAC,IAAA;QACA,KAAAC,GAAA,CAAAD,IAAA,CAAAE,MAAA;MACA;IACA;IACA,MAAAD,IAAAC,MAAA;MACA;QACA,MAAA5B,KAAA,CAAA6B,MAAA,sCAAAD,MAAA;QACA,KAAAtB,IAAA;MACA,SAAAS,KAAA;QACAF,OAAA,CAAAE,KAAA,UAAAA,KAAA;MACA;IACA;IACAe,WAAAC,GAAA;MACAlB,OAAA,CAAAC,GAAA,UAAAiB,GAAA;IACA;IACAC,sBAAAC,GAAA;MACA,KAAA7B,aAAA,GAAA6B,GAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}