{"ast":null,"code":"import * as echarts from \"echarts\";\nexport default {\n  props: {\n    // 接收图表的标题、Y轴数据和系列数据\n    chartTitle: {\n      type: String,\n      default: \"各团队人数汇总\"\n    },\n    teamNumsData: {\n      type: Array,\n      required: true\n    }\n  },\n  data() {\n    return {\n      chart: null\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  watch: {\n    // 当传入的数据发生变化时，更新图表\n    teamNumsData: \"updateChart\"\n  },\n  methods: {\n    initChart() {\n      const chartDom = this.$refs.chart;\n      this.chart = echarts.init(chartDom);\n      this.updateChart();\n    },\n    updateChart() {\n      // 对 teamNumsData 按人数排序\n      const sortedData = [...this.teamNumsData].sort((a, b) => b.personNum - a.personNum);\n\n      // 提取团队名称和人数数据\n      const names = sortedData.map(item => item.name);\n      const personNums = sortedData.map(item => item.personNum);\n      const option = {\n        title: {\n          text: this.chartTitle\n        },\n        tooltip: {\n          trigger: \"axis\",\n          axisPointer: {\n            type: \"shadow\"\n          }\n        },\n        legend: {},\n        grid: {\n          left: \"3%\",\n          right: \"4%\",\n          bottom: \"3%\",\n          containLabel: true\n        },\n        xAxis: {\n          type: \"value\",\n          boundaryGap: [0, 0.01]\n        },\n        yAxis: {\n          type: \"category\",\n          data: names\n        },\n        series: [{\n          name: \"人数\",\n          type: \"bar\",\n          data: personNums,\n          // 使用人数数据\n          itemStyle: {\n            color: \"#409EFF\"\n          }\n        }]\n      };\n      if (this.chart) {\n        this.chart.setOption(option);\n      }\n    }\n  },\n  beforeDestroy() {\n    // 销毁图表实例以释放内存\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["echarts","props","chartTitle","type","String","default","teamNumsData","Array","required","data","chart","mounted","initChart","watch","methods","chartDom","$refs","init","updateChart","sortedData","sort","a","b","personNum","names","map","item","name","personNums","option","title","text","tooltip","trigger","axisPointer","legend","grid","left","right","bottom","containLabel","xAxis","boundaryGap","yAxis","series","itemStyle","color","setOption","beforeDestroy","dispose"],"sources":["src/components/TeamNumsComponent.vue"],"sourcesContent":["<template>\n    <div ref=\"chart\" class=\"numsChart-container\"></div>\n</template>\n\n<script>\nimport * as echarts from \"echarts\";\n\nexport default {\n    props: {\n        // 接收图表的标题、Y轴数据和系列数据\n        chartTitle: {\n            type: String,\n            default: \"各团队人数汇总\"\n        },\n        teamNumsData: {\n            type: Array,\n            required: true\n        },\n    },\n    data() {\n        return {\n            chart: null\n        };\n    },\n    mounted() {\n        this.initChart();\n    },\n    watch: {\n        // 当传入的数据发生变化时，更新图表\n        teamNumsData: \"updateChart\",\n    },\n    methods: {\n        initChart() {\n            const chartDom = this.$refs.chart;\n            this.chart = echarts.init(chartDom);\n            this.updateChart();\n        },\n        updateChart() {\n            // 对 teamNumsData 按人数排序\n            const sortedData = [...this.teamNumsData].sort((a, b) => b.personNum - a.personNum);\n\n            // 提取团队名称和人数数据\n            const names = sortedData.map(item => item.name);\n            const personNums = sortedData.map(item => item.personNum);\n\n            const option = {\n                title: {\n                    text: this.chartTitle\n                },\n                tooltip: {\n                    trigger: \"axis\",\n                    axisPointer: {\n                        type: \"shadow\"\n                    }\n                },\n                legend: {},\n                grid: {\n                    left: \"3%\",\n                    right: \"4%\",\n                    bottom: \"3%\",\n                    containLabel: true\n                },\n                xAxis: {\n                    type: \"value\",\n                    boundaryGap: [0, 0.01]\n                },\n                yAxis: {\n                    type: \"category\",\n                    data: names\n                },\n                series: [\n                    {\n                        name: \"人数\",\n                        type: \"bar\",\n                        data: personNums, // 使用人数数据\n                        itemStyle: { color: \"#409EFF\" }\n                    }\n                ]\n            };\n\n            if (this.chart) {\n                this.chart.setOption(option);\n            }\n        }\n    },\n    beforeDestroy() {\n        // 销毁图表实例以释放内存\n        if (this.chart) {\n            this.chart.dispose();\n        }\n    }\n};\n</script>\n\n<style scoped>\n.numsChart-container {\n    width: 600px;\n    height: 500px;\n}\n</style>"],"mappings":"AAKA,YAAAA,OAAA;AAEA;EACAC,KAAA;IACA;IACAC,UAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAI,KAAA;MACAC,QAAA;IACA;EACA;EACAC,KAAA;IACA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,SAAA;EACA;EACAC,KAAA;IACA;IACAP,YAAA;EACA;EACAQ,OAAA;IACAF,UAAA;MACA,MAAAG,QAAA,QAAAC,KAAA,CAAAN,KAAA;MACA,KAAAA,KAAA,GAAAV,OAAA,CAAAiB,IAAA,CAAAF,QAAA;MACA,KAAAG,WAAA;IACA;IACAA,YAAA;MACA;MACA,MAAAC,UAAA,YAAAb,YAAA,EAAAc,IAAA,EAAAC,CAAA,EAAAC,CAAA,KAAAA,CAAA,CAAAC,SAAA,GAAAF,CAAA,CAAAE,SAAA;;MAEA;MACA,MAAAC,KAAA,GAAAL,UAAA,CAAAM,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA;MACA,MAAAC,UAAA,GAAAT,UAAA,CAAAM,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAH,SAAA;MAEA,MAAAM,MAAA;QACAC,KAAA;UACAC,IAAA,OAAA7B;QACA;QACA8B,OAAA;UACAC,OAAA;UACAC,WAAA;YACA/B,IAAA;UACA;QACA;QACAgC,MAAA;QACAC,IAAA;UACAC,IAAA;UACAC,KAAA;UACAC,MAAA;UACAC,YAAA;QACA;QACAC,KAAA;UACAtC,IAAA;UACAuC,WAAA;QACA;QACAC,KAAA;UACAxC,IAAA;UACAM,IAAA,EAAAe;QACA;QACAoB,MAAA,GACA;UACAjB,IAAA;UACAxB,IAAA;UACAM,IAAA,EAAAmB,UAAA;UAAA;UACAiB,SAAA;YAAAC,KAAA;UAAA;QACA;MAEA;MAEA,SAAApC,KAAA;QACA,KAAAA,KAAA,CAAAqC,SAAA,CAAAlB,MAAA;MACA;IACA;EACA;EACAmB,cAAA;IACA;IACA,SAAAtC,KAAA;MACA,KAAAA,KAAA,CAAAuC,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}