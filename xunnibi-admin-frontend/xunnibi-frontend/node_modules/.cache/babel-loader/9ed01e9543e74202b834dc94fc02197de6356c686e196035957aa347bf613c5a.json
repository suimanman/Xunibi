{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      searchQuery: \"\",\n      // 查询字段\n      tableData: [],\n      // 表格数据\n      dialogVisible: false,\n      // 弹窗显示控制\n      selectedRow: null // 当前选中的行\n    };\n  },\n  mounted() {\n    this.getAllDutyRecords(); // 初次加载获取所有记录\n  },\n  methods: {\n    async getAllDutyRecords() {\n      try {\n        const response = await axios.get(\"http://localhost:8080/dutyrecords/all\");\n        if (response.data.code === 200) {\n          this.tableData = response.data.data;\n        } else {\n          this.$message.error(response.data.msg || \"获取数据失败\");\n        }\n      } catch (error) {\n        console.error(\"获取值班记录失败:\", error);\n        this.$message.error(\"获取值班记录失败，请稍后重试\");\n      }\n    },\n    search() {\n      if (!this.searchQuery) {\n        this.$message.warning(\"请输入值班记录 ID\");\n        return;\n      }\n      axios.get(`http://localhost:8080/dutyrecords/${this.searchQuery}`).then(response => {\n        if (response.data.code === 200) {\n          this.tableData = [response.data.data];\n        } else {\n          this.$message.info(\"未找到匹配的记录\");\n        }\n      }).catch(error => {\n        console.error(\"查询失败:\", error);\n        this.$message.error(\"查询失败，请稍后重试\");\n      });\n    },\n    reset() {\n      this.searchQuery = \"\";\n      this.getAllDutyRecords();\n    },\n    openDialog(row) {\n      this.selectedRow = row;\n      this.dialogVisible = true;\n    },\n    handlePass() {\n      if (!this.selectedRow) return;\n      axios.put(\"http://localhost:8080/dutyrecords/update\", {\n        id: this.selectedRow.id,\n        status: \"已通过\"\n      }).then(response => {\n        if (response.data.code === 200) {\n          this.$message.success(\"审核通过成功\");\n          this.selectedRow.status = \"已通过\";\n          this.dialogVisible = false;\n        } else {\n          this.$message.error(response.data.msg || \"审核失败\");\n        }\n      }).catch(error => {\n        console.error(\"审核失败:\", error);\n        this.$message.error(\"审核失败，请稍后重试\");\n      });\n    },\n    handleNoPass(row) {\n      axios.put(\"http://localhost:8080/dutyrecords/update\", {\n        id: row.id,\n        status: \"未通过\"\n      }).then(response => {\n        if (response.data.code === 200) {\n          this.$message.success(\"审核不通过成功\");\n          row.status = \"未通过\";\n        } else {\n          this.$message.error(response.data.msg || \"操作失败\");\n        }\n      }).catch(error => {\n        console.error(\"操作失败:\", error);\n        this.$message.error(\"操作失败，请稍后重试\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchQuery","tableData","dialogVisible","selectedRow","mounted","getAllDutyRecords","methods","response","get","code","$message","error","msg","console","search","warning","then","info","catch","reset","openDialog","row","handlePass","put","id","status","success","handleNoPass"],"sources":["src/views/manage/DutyReviewView.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n        <div class=\"header\">\n            <el-input v-model=\"searchQuery\" placeholder=\"请输入值班记录 ID\" style=\"width: 250px\"></el-input>\n            <el-button type=\"info\" plain @click=\"search\">查询</el-button>\n            <el-button type=\"warning\" plain @click=\"reset\">重置</el-button>\n        </div>\n\n        <div class=\"table-wrapper\">\n            <el-table ref=\"filterTable\" :data=\"tableData\" style=\"width: 100%\" border>\n                <el-table-column prop=\"id\" label=\"ID\" align=\"center\" width=\"100px\" />\n                <el-table-column prop=\"teamName\" label=\"团队名称\" align=\"center\" />\n                <el-table-column prop=\"description\" label=\"描述\" align=\"center\" />\n                <el-table-column prop=\"status\" label=\"状态\" align=\"center\" />\n                <el-table-column label=\"操作\" align=\"center\" width=\"300px\">\n                    <template v-slot=\"scope\">\n                        <el-button size=\"mini\" type=\"primary\" plain :disabled=\"scope.row.status === '已通过'\"\n                            @click=\"openDialog(scope.row)\">\n                            审核通过\n                        </el-button>\n                        <el-button size=\"mini\" type=\"danger\" plain @click=\"handleNoPass(scope.row)\"\n                            :disabled=\"scope.row.status === '已通过'\">\n                            审核不通过\n                        </el-button>\n                    </template>\n                </el-table-column>\n            </el-table>\n        </div>\n\n        <!-- 审核通过弹窗 -->\n        <el-dialog title=\"确认审核通过\" :visible.sync=\"dialogVisible\" width=\"400px\">\n            <div>\n                <p>是否确认通过该记录的审核？</p>\n            </div>\n            <div slot=\"footer\" class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">取消</el-button>\n                <el-button type=\"primary\" @click=\"handlePass\">确认</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n    data() {\n        return {\n            searchQuery: \"\", // 查询字段\n            tableData: [], // 表格数据\n            dialogVisible: false, // 弹窗显示控制\n            selectedRow: null, // 当前选中的行\n        };\n    },\n    mounted() {\n        this.getAllDutyRecords(); // 初次加载获取所有记录\n    },\n    methods: {\n        async getAllDutyRecords() {\n            try {\n                const response = await axios.get(\"http://localhost:8080/dutyrecords/all\");\n                if (response.data.code === 200) {\n                    this.tableData = response.data.data;\n                } else {\n                    this.$message.error(response.data.msg || \"获取数据失败\");\n                }\n            } catch (error) {\n                console.error(\"获取值班记录失败:\", error);\n                this.$message.error(\"获取值班记录失败，请稍后重试\");\n            }\n        },\n        search() {\n            if (!this.searchQuery) {\n                this.$message.warning(\"请输入值班记录 ID\");\n                return;\n            }\n            axios\n                .get(`http://localhost:8080/dutyrecords/${this.searchQuery}`)\n                .then((response) => {\n                    if (response.data.code === 200) {\n                        this.tableData = [response.data.data];\n                    } else {\n                        this.$message.info(\"未找到匹配的记录\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(\"查询失败:\", error);\n                    this.$message.error(\"查询失败，请稍后重试\");\n                });\n        },\n        reset() {\n            this.searchQuery = \"\";\n            this.getAllDutyRecords();\n        },\n        openDialog(row) {\n            this.selectedRow = row;\n            this.dialogVisible = true;\n        },\n        handlePass() {\n            if (!this.selectedRow) return;\n\n            axios\n                .put(\"http://localhost:8080/dutyrecords/update\", {\n                    id: this.selectedRow.id,\n                    status: \"已通过\",\n                })\n                .then((response) => {\n                    if (response.data.code === 200) {\n                        this.$message.success(\"审核通过成功\");\n                        this.selectedRow.status = \"已通过\";\n                        this.dialogVisible = false;\n                    } else {\n                        this.$message.error(response.data.msg || \"审核失败\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(\"审核失败:\", error);\n                    this.$message.error(\"审核失败，请稍后重试\");\n                });\n        },\n        handleNoPass(row) {\n            axios\n                .put(\"http://localhost:8080/dutyrecords/update\", {\n                    id: row.id,\n                    status: \"未通过\",\n                })\n                .then((response) => {\n                    if (response.data.code === 200) {\n                        this.$message.success(\"审核不通过成功\");\n                        row.status = \"未通过\";\n                    } else {\n                        this.$message.error(response.data.msg || \"操作失败\");\n                    }\n                })\n                .catch((error) => {\n                    console.error(\"操作失败:\", error);\n                    this.$message.error(\"操作失败，请稍后重试\");\n                });\n        },\n    },\n};\n</script>\n\n<style scoped>\n.container {\n    padding: 20px;\n    background-color: #f9f9f9;\n}\n\n.header {\n    display: flex;\n    gap: 10px;\n    margin-bottom: 15px;\n}\n\n.header .el-input {\n    max-width: 300px;\n}\n\n.table-wrapper {\n    border: 1px solid #e0e0e0;\n    border-radius: 5px;\n    background-color: #ffffff;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n    padding: 10px;\n}\n</style>\n"],"mappings":"AA2CA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,WAAA;MAAA;MACAC,SAAA;MAAA;MACAC,aAAA;MAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,iBAAA;EACA;EACAC,OAAA;IACA,MAAAD,kBAAA;MACA;QACA,MAAAE,QAAA,SAAAT,KAAA,CAAAU,GAAA;QACA,IAAAD,QAAA,CAAAR,IAAA,CAAAU,IAAA;UACA,KAAAR,SAAA,GAAAM,QAAA,CAAAR,IAAA,CAAAA,IAAA;QACA;UACA,KAAAW,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAR,IAAA,CAAAa,GAAA;QACA;MACA,SAAAD,KAAA;QACAE,OAAA,CAAAF,KAAA,cAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAG,OAAA;MACA,UAAAd,WAAA;QACA,KAAAU,QAAA,CAAAK,OAAA;QACA;MACA;MACAjB,KAAA,CACAU,GAAA,2CAAAR,WAAA,IACAgB,IAAA,CAAAT,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAU,IAAA;UACA,KAAAR,SAAA,IAAAM,QAAA,CAAAR,IAAA,CAAAA,IAAA;QACA;UACA,KAAAW,QAAA,CAAAO,IAAA;QACA;MACA,GACAC,KAAA,CAAAP,KAAA;QACAE,OAAA,CAAAF,KAAA,UAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAQ,MAAA;MACA,KAAAnB,WAAA;MACA,KAAAK,iBAAA;IACA;IACAe,WAAAC,GAAA;MACA,KAAAlB,WAAA,GAAAkB,GAAA;MACA,KAAAnB,aAAA;IACA;IACAoB,WAAA;MACA,UAAAnB,WAAA;MAEAL,KAAA,CACAyB,GAAA;QACAC,EAAA,OAAArB,WAAA,CAAAqB,EAAA;QACAC,MAAA;MACA,GACAT,IAAA,CAAAT,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAU,IAAA;UACA,KAAAC,QAAA,CAAAgB,OAAA;UACA,KAAAvB,WAAA,CAAAsB,MAAA;UACA,KAAAvB,aAAA;QACA;UACA,KAAAQ,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAR,IAAA,CAAAa,GAAA;QACA;MACA,GACAM,KAAA,CAAAP,KAAA;QACAE,OAAA,CAAAF,KAAA,UAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;IACAgB,aAAAN,GAAA;MACAvB,KAAA,CACAyB,GAAA;QACAC,EAAA,EAAAH,GAAA,CAAAG,EAAA;QACAC,MAAA;MACA,GACAT,IAAA,CAAAT,QAAA;QACA,IAAAA,QAAA,CAAAR,IAAA,CAAAU,IAAA;UACA,KAAAC,QAAA,CAAAgB,OAAA;UACAL,GAAA,CAAAI,MAAA;QACA;UACA,KAAAf,QAAA,CAAAC,KAAA,CAAAJ,QAAA,CAAAR,IAAA,CAAAa,GAAA;QACA;MACA,GACAM,KAAA,CAAAP,KAAA;QACAE,OAAA,CAAAF,KAAA,UAAAA,KAAA;QACA,KAAAD,QAAA,CAAAC,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}