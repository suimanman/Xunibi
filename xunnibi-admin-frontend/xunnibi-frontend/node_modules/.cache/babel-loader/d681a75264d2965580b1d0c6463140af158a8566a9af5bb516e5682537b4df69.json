{"ast":null,"code":"import EChartComponent from '@/components/EChartComponent.vue';\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      like: true,\n      value1: 4154.564,\n      value2: 1314,\n      title: \"增长人数\"\n    };\n  },\n  mounted() {\n    this.initChart();\n  },\n  methods: {\n    initChart() {\n      // 获取 DOM 元素\n      const chartDom = this.$refs.chart;\n\n      // 初始化 ECharts 实例\n      this.chart = echarts.init(chartDom);\n\n      // 配置项\n      const option = {\n        legend: {},\n        tooltip: {\n          trigger: 'axis',\n          showContent: false\n        },\n        dataset: {\n          source: [['product', '2012-01', '2013', '2014', '2015', '2016', '2017'], ['论文', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1], ['竞赛', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7], ['培训', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5], ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]]\n        },\n        xAxis: {\n          type: 'category'\n        },\n        yAxis: {\n          gridIndex: 0\n        },\n        grid: {\n          top: '55%'\n        },\n        series: [{\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'line',\n          smooth: true,\n          seriesLayoutBy: 'row',\n          emphasis: {\n            focus: 'series'\n          }\n        }, {\n          type: 'pie',\n          id: 'pie',\n          radius: '30%',\n          center: ['50%', '25%'],\n          emphasis: {\n            focus: 'self'\n          },\n          label: {\n            formatter: '{b}: {@2012} ({d}%)'\n          },\n          encode: {\n            itemName: 'product',\n            value: '2012',\n            tooltip: '2012'\n          }\n        }]\n      };\n\n      // 设置图表的配置项\n      this.chart.setOption(option);\n\n      // 更新图表配置，实现联动效果\n      this.chart.on('updateAxisPointer', event => {\n        const xAxisInfo = event.axesInfo[0];\n        if (xAxisInfo) {\n          const dimension = xAxisInfo.value + 1;\n          this.chart.setOption({\n            series: {\n              id: 'pie',\n              label: {\n                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n              },\n              encode: {\n                value: dimension,\n                tooltip: dimension\n              }\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["EChartComponent","echarts","data","like","value1","value2","title","mounted","initChart","methods","chartDom","$refs","chart","init","option","legend","tooltip","trigger","showContent","dataset","source","xAxis","type","yAxis","gridIndex","grid","top","series","smooth","seriesLayoutBy","emphasis","focus","id","radius","center","label","formatter","encode","itemName","value","setOption","on","event","xAxisInfo","axesInfo","dimension"],"sources":["src/views/manage/XunibiView.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"header\">\n            <el-row :gutter=\"20\">\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">入住团队总数</div>\n                        <div class=\"value\">{{ value2.toLocaleString(undefined, { minimumFractionDigits: 2 }) }}</div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">入住总人数</div>\n                        <div class=\"value\">1000</div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">今日签到人数</div>\n                        <div class=\"value\">\n                            <i class=\"el-icon-s-flag\" style=\"color: red\"></i>\n                            {{ value1.toLocaleString(undefined, { minimumFractionDigits: 2 }) }}\n                            <i class=\"el-icon-s-flag\" style=\"color: blue\"></i>\n                        </div>\n                    </div>\n                </el-col>\n                <el-col :span=\"6\">\n                    <div class=\"statistic-box\">\n                        <div class=\"title\">Feedback</div>\n                        <div class=\"value\">\n                            {{ like ? 521 : 520 }}\n                            <span @click=\"like = !like\" class=\"like\">\n                                <i class=\"el-icon-star-on\" style=\"color:red\" v-show=\"like\"></i>\n                                <i class=\"el-icon-star-off\" v-show=\"!like\"></i>\n                            </span>\n                        </div>\n                    </div>\n                </el-col>\n            </el-row>\n        </div>\n\n        <div class=\"main\">\n\n        </div>\n        <div class=\"footer\">\n            11111\n        </div>\n    </div>\n</template>\n\n<script>\nimport EChartComponent from '@/components/EChartComponent.vue';\nimport * as echarts from \"echarts\";\nexport default {\n    data() {\n        return {\n            like: true,\n            value1: 4154.564,\n            value2: 1314,\n            title: \"增长人数\",\n        };\n    },\n\n    mounted() {\n        this.initChart();\n    },\n\n    methods: {\n        initChart() {\n            // 获取 DOM 元素\n            const chartDom = this.$refs.chart;\n\n            // 初始化 ECharts 实例\n            this.chart = echarts.init(chartDom);\n\n            // 配置项\n            const option = {\n                legend: {},\n                tooltip: {\n                    trigger: 'axis',\n                    showContent: false\n                },\n                dataset: {\n                    source: [\n                        ['product', '2012-01', '2013', '2014', '2015', '2016', '2017'],\n                        ['论文', 56.5, 82.1, 88.7, 70.1, 53.4, 85.1],\n                        ['竞赛', 51.1, 51.4, 55.1, 53.3, 73.8, 68.7],\n                        ['培训', 40.1, 62.2, 69.5, 36.4, 45.2, 32.5],\n                        ['Walnut Brownie', 25.2, 37.1, 41.2, 18, 33.9, 49.1]\n                    ]\n                },\n                xAxis: { type: 'category' },\n                yAxis: { gridIndex: 0 },\n                grid: { top: '55%' },\n                series: [\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'line',\n                        smooth: true,\n                        seriesLayoutBy: 'row',\n                        emphasis: { focus: 'series' }\n                    },\n                    {\n                        type: 'pie',\n                        id: 'pie',\n                        radius: '30%',\n                        center: ['50%', '25%'],\n                        emphasis: { focus: 'self' },\n                        label: {\n                            formatter: '{b}: {@2012} ({d}%)'\n                        },\n                        encode: {\n                            itemName: 'product',\n                            value: '2012',\n                            tooltip: '2012'\n                        }\n                    }\n                ]\n            };\n\n            // 设置图表的配置项\n            this.chart.setOption(option);\n\n            // 更新图表配置，实现联动效果\n            this.chart.on('updateAxisPointer', (event) => {\n                const xAxisInfo = event.axesInfo[0];\n                if (xAxisInfo) {\n                    const dimension = xAxisInfo.value + 1;\n                    this.chart.setOption({\n                        series: {\n                            id: 'pie',\n                            label: {\n                                formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n                            },\n                            encode: {\n                                value: dimension,\n                                tooltip: dimension\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    }\n};\n</script>\n\n<style scoped>\n.statistic-box {\n    background: #fff;\n    border: 1px solid #ddd;\n    padding: 10px;\n    border-radius: 5px;\n    text-align: center;\n}\n\n.statistic-box .title {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 5px;\n}\n\n.statistic-box .value {\n    font-size: 20px;\n}\n\n.like {\n    cursor: pointer;\n    font-size: 25px;\n    display: inline-block;\n}\n\n.chart-container {\n    width: 100%;\n    height: 400px;\n}\n</style>\n"],"mappings":"AAmDA,OAAAA,eAAA;AACA,YAAAC,OAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,MAAA;MACAC,KAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,SAAA;EACA;EAEAC,OAAA;IACAD,UAAA;MACA;MACA,MAAAE,QAAA,QAAAC,KAAA,CAAAC,KAAA;;MAEA;MACA,KAAAA,KAAA,GAAAX,OAAA,CAAAY,IAAA,CAAAH,QAAA;;MAEA;MACA,MAAAI,MAAA;QACAC,MAAA;QACAC,OAAA;UACAC,OAAA;UACAC,WAAA;QACA;QACAC,OAAA;UACAC,MAAA,GACA,gEACA,4CACA,4CACA,4CACA;QAEA;QACAC,KAAA;UAAAC,IAAA;QAAA;QACAC,KAAA;UAAAC,SAAA;QAAA;QACAC,IAAA;UAAAC,GAAA;QAAA;QACAC,MAAA,GACA;UACAL,IAAA;UACAM,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAT,IAAA;UACAM,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAT,IAAA;UACAM,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAT,IAAA;UACAM,MAAA;UACAC,cAAA;UACAC,QAAA;YAAAC,KAAA;UAAA;QACA,GACA;UACAT,IAAA;UACAU,EAAA;UACAC,MAAA;UACAC,MAAA;UACAJ,QAAA;YAAAC,KAAA;UAAA;UACAI,KAAA;YACAC,SAAA;UACA;UACAC,MAAA;YACAC,QAAA;YACAC,KAAA;YACAvB,OAAA;UACA;QACA;MAEA;;MAEA;MACA,KAAAJ,KAAA,CAAA4B,SAAA,CAAA1B,MAAA;;MAEA;MACA,KAAAF,KAAA,CAAA6B,EAAA,sBAAAC,KAAA;QACA,MAAAC,SAAA,GAAAD,KAAA,CAAAE,QAAA;QACA,IAAAD,SAAA;UACA,MAAAE,SAAA,GAAAF,SAAA,CAAAJ,KAAA;UACA,KAAA3B,KAAA,CAAA4B,SAAA;YACAb,MAAA;cACAK,EAAA;cACAG,KAAA;gBACAC,SAAA,eAAAS,SAAA;cACA;cACAR,MAAA;gBACAE,KAAA,EAAAM,SAAA;gBACA7B,OAAA,EAAA6B;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}